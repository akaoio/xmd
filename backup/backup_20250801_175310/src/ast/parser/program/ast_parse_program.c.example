/**
 * @file ast_parse_program.c
 * @brief Parse XMD program from source text into AST
 * 
 * This file contains ONLY the ast_parse_program function.
 * One function per file - Genesis principle compliance.
 */

#include "ast_parser.h"
#include "ast_node.h"
#include "lexer.h"
#include <stdlib.h>

/**
 * @brief Parse an entire XMD program
 * @param source The source text to parse
 * @return AST node representing the program, or NULL on error
 */
ast_node* ast_parse_program(const char* source) {
    if (!source) {
        return NULL;
    }
    
    ast_node* program = ast_create_program();
    if (!program) {
        return NULL;
    }
    
    const char* pos = source;
    
    while (*pos) {
        ast_node* stmt = ast_parse_statement_simple(&pos);
        if (stmt) {
            ast_add_statement(program, stmt);
        }
        
        // Skip whitespace between statements
        while (*pos && (*pos == ' ' || *pos == '\t' || *pos == '\n')) {
            pos++;
        }
    }
    
    return program;
}