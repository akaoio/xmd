{
  "summary": {
    "total_defined_functions": 313,
    "total_called_functions": 905,
    "dead_functions_count": 0,
    "ghost_functions_count": 558,
    "potential_duplicates": 18
  },
  "dead_functions": [],
  "ghost_functions": [
    {
      "name": "xmd_get_version",
      "calls": [
        {
          "file": "src/main.c",
          "line": 11
        },
        {
          "file": "src/main.c",
          "line": 14
        },
        {
          "file": "src/bindings/c_api/version/xmd_get_version/xmd_get_version.c",
          "line": 16
        },
        {
          "file": "include/xmd.h",
          "line": 221
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "Copyright",
      "calls": [
        {
          "file": "src/main.c",
          "line": 16
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "main",
      "calls": [
        {
          "file": "src/main.c",
          "line": 71
        },
        {
          "file": "include/main_internal.h",
          "line": 51
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "string",
      "calls": [
        {
          "file": "src/ast/ast_process_xmd_content.c",
          "line": 27
        },
        {
          "file": "src/ast/substitution/ast_interpolate_string.c",
          "line": 3
        },
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 21
        },
        {
          "file": "src/ast/json/json_functions.c",
          "line": 21
        },
        {
          "file": "src/ast/json/json_functions.c",
          "line": 85
        },
        {
          "file": "src/ast/evaluator/function/ast_evaluate_function_def/ast_evaluate_function_def.c",
          "line": 47
        },
        {
          "file": "src/ast/evaluator/function/ast_evaluate_function_call/ast_evaluate_function_call.c",
          "line": 62
        },
        {
          "file": "src/security/sanitization/security_sanitize_output/security_sanitize_output.c",
          "line": 17
        },
        {
          "file": "src/bindings/c_api/results/c_api_create_result/c_api_create_result.c",
          "line": 17
        },
        {
          "file": "include/conditional.h",
          "line": 87
        },
        {
          "file": "include/conditional.h",
          "line": 101
        },
        {
          "file": "include/lexer.h",
          "line": 26
        },
        {
          "file": "include/loop.h",
          "line": 67
        },
        {
          "file": "include/loop.h",
          "line": 80
        },
        {
          "file": "include/loop.h",
          "line": 111
        },
        {
          "file": "include/performance.h",
          "line": 180
        },
        {
          "file": "include/performance.h",
          "line": 216
        },
        {
          "file": "include/security.h",
          "line": 85
        },
        {
          "file": "include/template.h",
          "line": 41
        },
        {
          "file": "include/variable.h",
          "line": 57
        },
        {
          "file": "include/xmd.h",
          "line": 159
        },
        {
          "file": "include/xmd.h",
          "line": 205
        },
        {
          "file": "include/xmd.h",
          "line": 212
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "program",
      "calls": [
        {
          "file": "src/ast/ast_process_xmd_content.c",
          "line": 43
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "strncmp",
      "calls": [
        {
          "file": "src/misc/native_xmd_dispatch.c",
          "line": 41
        },
        {
          "file": "src/misc/native_xmd_dispatch.c",
          "line": 42
        },
        {
          "file": "src/misc/native_xmd_dispatch.c",
          "line": 43
        },
        {
          "file": "src/misc/native_xmd_dispatch.c",
          "line": 44
        },
        {
          "file": "src/misc/native_xmd_dispatch.c",
          "line": 45
        },
        {
          "file": "src/misc/native_xmd_dispatch.c",
          "line": 46
        },
        {
          "file": "src/misc/native_xmd_dispatch.c",
          "line": 47
        },
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 167
        },
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 170
        },
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 173
        },
        {
          "file": "src/ast/json/json_functions.c",
          "line": 478
        },
        {
          "file": "src/ast/json/json_functions.c",
          "line": 484
        },
        {
          "file": "src/ast/json/json_functions.c",
          "line": 490
        },
        {
          "file": "src/ast/preprocess/extract_xmd_directives.c",
          "line": 35
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 40
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 52
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 57
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 62
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 67
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 84
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 97
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 110
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 115
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 120
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 125
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 130
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 140
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 172
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 173
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 174
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 175
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 176
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 177
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 178
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 179
        },
        {
          "file": "src/ast/parser/function/ast_parse_function/ast_parse_function.c",
          "line": 160
        },
        {
          "file": "src/ast/parser/class/ast_parse_method/ast_parse_method.c",
          "line": 32
        },
        {
          "file": "src/ast/parser/class/ast_parse_method/ast_parse_method.c",
          "line": 40
        },
        {
          "file": "src/ast/parser/class/ast_parse_class/ast_parse_class.c",
          "line": 45
        },
        {
          "file": "src/ast/parser/loop/ast_parse_loop/ast_parse_loop.c",
          "line": 65
        },
        {
          "file": "src/ast/parser/loop/ast_parse_loop/ast_parse_loop.c",
          "line": 193
        },
        {
          "file": "src/ast/parser/loop/ast_parse_loop/ast_parse_loop.c",
          "line": 209
        },
        {
          "file": "src/ast/parser/loop/ast_parse_range_loop/ast_parse_range_loop.c",
          "line": 46
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement/ast_parse_statement.c",
          "line": 39
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement/ast_parse_statement.c",
          "line": 63
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement/ast_parse_statement.c",
          "line": 68
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement/ast_parse_statement.c",
          "line": 73
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement/ast_parse_statement.c",
          "line": 78
        },
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 27
        },
        {
          "file": "src/parsers/json/parse_json_value/parse_json_value.c",
          "line": 46
        },
        {
          "file": "src/parsers/json/parse_json_value/parse_json_value.c",
          "line": 48
        },
        {
          "file": "src/parsers/json/parse_json_value/parse_json_value.c",
          "line": 50
        },
        {
          "file": "src/parsers/yaml/parse_yaml_value/parse_yaml_value.c",
          "line": 48
        },
        {
          "file": "src/parsers/yaml/parse_yaml_value/parse_yaml_value.c",
          "line": 48
        },
        {
          "file": "src/parsers/yaml/parse_yaml_value/parse_yaml_value.c",
          "line": 50
        },
        {
          "file": "src/parsers/yaml/parse_yaml_value/parse_yaml_value.c",
          "line": 50
        },
        {
          "file": "src/parsers/yaml/parse_yaml_value/parse_yaml_value.c",
          "line": 52
        },
        {
          "file": "src/parsers/yaml/parse_yaml_value/parse_yaml_value.c",
          "line": 52
        },
        {
          "file": "src/platform/memory/xmd_get_memory_usage/xmd_get_memory_usage.c",
          "line": 23
        },
        {
          "file": "src/resource/utils/get_memory_usage/get_memory_usage.c",
          "line": 19
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "strstr",
      "calls": [
        {
          "file": "src/misc/native_xmd_dispatch.c",
          "line": 48
        },
        {
          "file": "src/misc/native_xmd_dispatch.c",
          "line": 79
        },
        {
          "file": "src/ast/substitution/ast_interpolate_string.c",
          "line": 62
        },
        {
          "file": "src/ast/substitution/ast_interpolate_string.c",
          "line": 116
        },
        {
          "file": "src/ast/preprocess/extract_xmd_directives.c",
          "line": 45
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 41
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 74
        },
        {
          "file": "src/ast/parser/conditional/ast_parse_conditional.c",
          "line": 29
        },
        {
          "file": "src/ast/parser/loop/ast_parse_while/ast_parse_while.c",
          "line": 63
        },
        {
          "file": "src/ast/parser/loop/ast_parse_while/ast_parse_while.c",
          "line": 63
        },
        {
          "file": "src/ast/parser/loop/ast_parse_while/ast_parse_while.c",
          "line": 64
        },
        {
          "file": "src/ast/parser/loop/ast_parse_while/ast_parse_while.c",
          "line": 64
        },
        {
          "file": "src/ast/parser/loop/ast_parse_while/ast_parse_while.c",
          "line": 65
        },
        {
          "file": "src/ast/parser/loop/ast_parse_while/ast_parse_while.c",
          "line": 65
        },
        {
          "file": "src/ast/parser/loop/ast_parse_range_loop/ast_parse_range_loop.c",
          "line": 53
        },
        {
          "file": "src/ast/parser/expression/ast_parse_math_expression/ast_parse_math_expression.c",
          "line": 31
        },
        {
          "file": "src/ast/parser/expression/ast_parse_math_expression/ast_parse_math_expression.c",
          "line": 33
        },
        {
          "file": "src/ast/parser/expression/ast_parse_math_expression/ast_parse_math_expression.c",
          "line": 35
        },
        {
          "file": "src/ast/parser/expression/ast_parse_math_expression/ast_parse_math_expression.c",
          "line": 37
        },
        {
          "file": "src/ast/parser/expression/ast_parse_math_expression/ast_parse_math_expression.c",
          "line": 65
        },
        {
          "file": "src/ast/parser/expression/ast_parse_math_expression/ast_parse_math_expression.c",
          "line": 65
        },
        {
          "file": "src/ast/parser/expression/ast_parse_math_expression/ast_parse_math_expression.c",
          "line": 66
        },
        {
          "file": "src/ast/parser/expression/ast_parse_math_expression/ast_parse_math_expression.c",
          "line": 66
        },
        {
          "file": "src/ast/parser/expression/ast_parse_expression/ast_parse_expression.c",
          "line": 123
        },
        {
          "file": "src/ast/parser/expression/ast_parse_expression/ast_parse_expression.c",
          "line": 123
        },
        {
          "file": "src/ast/parser/expression/ast_parse_expression/ast_parse_expression.c",
          "line": 124
        },
        {
          "file": "src/ast/parser/expression/ast_parse_expression/ast_parse_expression.c",
          "line": 124
        },
        {
          "file": "src/ast/parser/expression/ast_parse_expression/ast_parse_expression.c",
          "line": 194
        },
        {
          "file": "src/ast/parser/expression/ast_parse_expression/ast_parse_expression.c",
          "line": 194
        },
        {
          "file": "src/ast/parser/expression/ast_parse_expression/ast_parse_expression.c",
          "line": 195
        },
        {
          "file": "src/ast/parser/expression/ast_parse_expression/ast_parse_expression.c",
          "line": 195
        },
        {
          "file": "src/ast/parser/expression/ast_parse_comparison_expression/ast_parse_comparison_expression.c",
          "line": 42
        },
        {
          "file": "src/ast/parser/expression/ast_parse_comparison_expression/ast_parse_comparison_expression.c",
          "line": 45
        },
        {
          "file": "src/ast/parser/expression/ast_parse_comparison_expression/ast_parse_comparison_expression.c",
          "line": 48
        },
        {
          "file": "src/ast/parser/expression/ast_parse_comparison_expression/ast_parse_comparison_expression.c",
          "line": 51
        },
        {
          "file": "src/ast/parser/expression/ast_parse_comparison_expression/ast_parse_comparison_expression.c",
          "line": 54
        },
        {
          "file": "src/ast/parser/expression/ast_parse_comparison_expression/ast_parse_comparison_expression.c",
          "line": 57
        },
        {
          "file": "src/ast/parser/control/ast_parse_if_then/ast_parse_if_then.c",
          "line": 33
        },
        {
          "file": "src/ast/parser/control/ast_parse_elif/ast_parse_elif.c",
          "line": 54
        },
        {
          "file": "src/ast/parser/control/ast_parse_elif/ast_parse_elif.c",
          "line": 54
        },
        {
          "file": "src/ast/parser/control/ast_parse_elif/ast_parse_elif.c",
          "line": 55
        },
        {
          "file": "src/ast/parser/control/ast_parse_elif/ast_parse_elif.c",
          "line": 55
        },
        {
          "file": "src/ast/parser/control/ast_parse_elif/ast_parse_elif.c",
          "line": 56
        },
        {
          "file": "src/ast/parser/control/ast_parse_elif/ast_parse_elif.c",
          "line": 56
        },
        {
          "file": "src/ast/node/create/ast_create_identifier/ast_create_identifier.c",
          "line": 26
        },
        {
          "file": "src/security/validation/security_validate_command.c",
          "line": 30
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_get_syntax_name",
      "calls": [
        {
          "file": "src/misc/native_xmd_dispatch.c",
          "line": 69
        },
        {
          "file": "include/native_xmd.h",
          "line": 42
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "comments",
      "calls": [
        {
          "file": "src/misc/native_xmd_dispatch.c",
          "line": 78
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "processor",
      "calls": [
        {
          "file": "src/misc/native_xmd_dispatch.c",
          "line": 87
        },
        {
          "file": "include/ast_evaluator.h",
          "line": 12
        },
        {
          "file": "include/native_xmd.h",
          "line": 24
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "output",
      "calls": [
        {
          "file": "src/misc/native_xmd_dispatch.c",
          "line": 89
        },
        {
          "file": "src/misc/native_xmd_dispatch.c",
          "line": 118
        },
        {
          "file": "src/ast/evaluator/program/ast_evaluate_program/ast_evaluate_program.c",
          "line": 17
        },
        {
          "file": "src/security/sanitization/security_sanitize_command_output/security_sanitize_command_output.c",
          "line": 17
        },
        {
          "file": "include/output.h",
          "line": 67
        },
        {
          "file": "include/output.h",
          "line": 76
        },
        {
          "file": "include/output.h",
          "line": 84
        },
        {
          "file": "include/output.h",
          "line": 93
        },
        {
          "file": "include/output.h",
          "line": 101
        },
        {
          "file": "include/output.h",
          "line": 110
        },
        {
          "file": "include/security.h",
          "line": 99
        },
        {
          "file": "include/native_xmd.h",
          "line": 19
        },
        {
          "file": "include/native_xmd.h",
          "line": 26
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "parser_get_error",
      "calls": [
        {
          "file": "src/parser/error/parser_get_error/parser_get_error.c",
          "line": 15
        },
        {
          "file": "include/ast_parser.h",
          "line": 50
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "va_start",
      "calls": [
        {
          "file": "src/parser/error/parser_set_error/parser_set_error.c",
          "line": 37
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "vsnprintf",
      "calls": [
        {
          "file": "src/parser/error/parser_set_error/parser_set_error.c",
          "line": 38
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "va_end",
      "calls": [
        {
          "file": "src/parser/error/parser_set_error/parser_set_error.c",
          "line": 39
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "edge",
      "calls": [
        {
          "file": "src/dependency/detection/dependency_check_circular_from/dependency_check_circular_from.c",
          "line": 32
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "gray",
      "calls": [
        {
          "file": "src/dependency/detection/dependency_check_circular_from/dependency_check_circular_from.c",
          "line": 41
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "black",
      "calls": [
        {
          "file": "src/dependency/detection/dependency_check_circular_from/dependency_check_circular_from.c",
          "line": 54
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "White",
      "calls": [
        {
          "file": "src/dependency/graph/dependency_node_new/dependency_node_new.c",
          "line": 32
        },
        {
          "file": "src/dependency/utilities/reset_visit_states/reset_visit_states.c",
          "line": 23
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "text",
      "calls": [
        {
          "file": "src/ast/substitution/ast_substitute_variables.c",
          "line": 22
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 166
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "size",
      "calls": [
        {
          "file": "src/ast/substitution/ast_substitute_variables.c",
          "line": 30
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "isalnum",
      "calls": [
        {
          "file": "src/ast/substitution/ast_substitute_variables.c",
          "line": 37
        },
        {
          "file": "src/ast/substitution/ast_substitute_variables.c",
          "line": 54
        },
        {
          "file": "src/ast/parser/object/ast_parse_object_creation.c",
          "line": 44
        },
        {
          "file": "src/ast/parser/function/ast_parse_potential_function_call/ast_parse_potential_function_call.c",
          "line": 30
        },
        {
          "file": "src/ast/parser/class/ast_parse_class/ast_parse_class.c",
          "line": 30
        },
        {
          "file": "src/ast/parser/class/ast_parse_class/ast_parse_class.c",
          "line": 50
        },
        {
          "file": "src/ast/parser/loop/ast_parse_loop/ast_parse_loop.c",
          "line": 98
        },
        {
          "file": "src/ast/parser/literal/ast_parse_single_value/ast_parse_single_value.c",
          "line": 39
        },
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 37
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "strchr",
      "calls": [
        {
          "file": "src/ast/substitution/ast_substitute_variables.c",
          "line": 45
        },
        {
          "file": "src/ast/substitution/ast_interpolate_string.c",
          "line": 131
        },
        {
          "file": "src/ast/substitution/ast_interpolate_string.c",
          "line": 132
        },
        {
          "file": "src/ast/substitution/ast_interpolate_string.c",
          "line": 182
        },
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 41
        },
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 41
        },
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 42
        },
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 42
        },
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 187
        },
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 215
        },
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 227
        },
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 241
        },
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 274
        },
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 92
        },
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 170
        },
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 171
        },
        {
          "file": "src/config/load/config_load_file/config_load_file.c",
          "line": 36
        },
        {
          "file": "src/parsers/detection/detect_parser_type.c",
          "line": 49
        },
        {
          "file": "src/parsers/detection/detect_parser_type.c",
          "line": 50
        },
        {
          "file": "src/parsers/json/parse_json_value/parse_json_value.c",
          "line": 29
        },
        {
          "file": "src/parsers/yaml/parse_yaml_value/parse_yaml_value.c",
          "line": 31
        },
        {
          "file": "src/security/sanitization/security_sanitize_html/security_sanitize_html.c",
          "line": 42
        },
        {
          "file": "src/security/utilities/process_html_tag/process_html_tag.c",
          "line": 40
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "strncpy",
      "calls": [
        {
          "file": "src/ast/substitution/ast_substitute_variables.c",
          "line": 63
        },
        {
          "file": "src/ast/substitution/ast_interpolate_string.c",
          "line": 71
        },
        {
          "file": "src/ast/substitution/ast_interpolate_string.c",
          "line": 126
        },
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 195
        },
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 233
        },
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 249
        },
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 280
        },
        {
          "file": "src/ast/json/json_functions.c",
          "line": 333
        },
        {
          "file": "src/ast/json/json_functions.c",
          "line": 467
        },
        {
          "file": "src/ast/json/json_functions.c",
          "line": 515
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 151
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 188
        },
        {
          "file": "src/ast/parser/conditional/ast_parse_conditional.c",
          "line": 39
        },
        {
          "file": "src/ast/parser/object/ast_parse_object_creation.c",
          "line": 52
        },
        {
          "file": "src/ast/parser/object/ast_parse_object_creation.c",
          "line": 71
        },
        {
          "file": "src/ast/parser/function/ast_parse_function/ast_parse_function.c",
          "line": 54
        },
        {
          "file": "src/ast/parser/function/ast_parse_function/ast_parse_function.c",
          "line": 82
        },
        {
          "file": "src/ast/parser/function/ast_parse_function/ast_parse_function.c",
          "line": 149
        },
        {
          "file": "src/ast/parser/function/ast_parse_potential_function_call/ast_parse_potential_function_call.c",
          "line": 44
        },
        {
          "file": "src/ast/parser/function/ast_parse_potential_function_call/ast_parse_potential_function_call.c",
          "line": 109
        },
        {
          "file": "src/ast/parser/function/ast_parse_potential_function_call/ast_parse_potential_function_call.c",
          "line": 116
        },
        {
          "file": "src/ast/parser/function/ast_parse_potential_function_call/ast_parse_potential_function_call.c",
          "line": 145
        },
        {
          "file": "src/ast/parser/function/ast_parse_potential_function_call/ast_parse_potential_function_call.c",
          "line": 153
        },
        {
          "file": "src/ast/parser/class/ast_parse_method/ast_parse_method.c",
          "line": 57
        },
        {
          "file": "src/ast/parser/class/ast_parse_class/ast_parse_class.c",
          "line": 39
        },
        {
          "file": "src/ast/parser/class/ast_parse_class/ast_parse_class.c",
          "line": 56
        },
        {
          "file": "src/ast/parser/loop/ast_parse_while/ast_parse_while.c",
          "line": 51
        },
        {
          "file": "src/ast/parser/loop/ast_parse_loop/ast_parse_loop.c",
          "line": 56
        },
        {
          "file": "src/ast/parser/loop/ast_parse_loop/ast_parse_loop.c",
          "line": 86
        },
        {
          "file": "src/ast/parser/loop/ast_parse_range_loop/ast_parse_range_loop.c",
          "line": 39
        },
        {
          "file": "src/ast/parser/loop/ast_parse_range_loop/ast_parse_range_loop.c",
          "line": 75
        },
        {
          "file": "src/ast/parser/loop/ast_parse_range_loop/ast_parse_range_loop.c",
          "line": 94
        },
        {
          "file": "src/ast/parser/expression/ast_parse_expression/ast_parse_expression.c",
          "line": 96
        },
        {
          "file": "src/ast/parser/expression/ast_parse_expression/ast_parse_expression.c",
          "line": 180
        },
        {
          "file": "src/ast/parser/expression/ast_parse_comparison_expression/ast_parse_comparison_expression.c",
          "line": 91
        },
        {
          "file": "src/ast/parser/expression/ast_parse_comparison_expression/ast_parse_comparison_expression.c",
          "line": 111
        },
        {
          "file": "src/ast/parser/control/ast_parse_if_then/ast_parse_if_then.c",
          "line": 45
        },
        {
          "file": "src/ast/parser/control/ast_parse_elif/ast_parse_elif.c",
          "line": 43
        },
        {
          "file": "src/ast/parser/control/ast_parse_if_block/ast_parse_if_block.c",
          "line": 28
        },
        {
          "file": "src/ast/parser/literal/ast_parse_single_value/ast_parse_single_value.c",
          "line": 46
        },
        {
          "file": "src/ast/parser/literal/ast_parse_string_literal/ast_parse_string_literal.c",
          "line": 46
        },
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 50
        },
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 82
        },
        {
          "file": "src/parsers/json/parse_json_value/parse_json_value.c",
          "line": 36
        },
        {
          "file": "src/parsers/yaml/parse_yaml_value/parse_yaml_value.c",
          "line": 38
        },
        {
          "file": "src/parsers/yaml/parse_yaml_value/parse_yaml_value.c",
          "line": 63
        },
        {
          "file": "src/utils/string/string_extract/string_extract.c",
          "line": 36
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "__attribute__",
      "calls": [
        {
          "file": "src/ast/substitution/ast_interpolate_string.c",
          "line": 17
        },
        {
          "file": "include/platform.h",
          "line": 222
        },
        {
          "file": "include/platform.h",
          "line": 223
        },
        {
          "file": "include/platform.h",
          "line": 225
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "substituted",
      "calls": [
        {
          "file": "src/ast/substitution/ast_interpolate_string.c",
          "line": 26
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "fflush",
      "calls": [
        {
          "file": "src/ast/substitution/ast_interpolate_string.c",
          "line": 30
        },
        {
          "file": "src/ast/substitution/ast_interpolate_string.c",
          "line": 32
        },
        {
          "file": "src/ast/substitution/ast_interpolate_string.c",
          "line": 37
        },
        {
          "file": "src/ast/substitution/ast_interpolate_string.c",
          "line": 42
        },
        {
          "file": "src/ast/substitution/ast_interpolate_string.c",
          "line": 47
        },
        {
          "file": "src/ast/substitution/ast_interpolate_string.c",
          "line": 52
        },
        {
          "file": "src/store/memory/store_destroy.c",
          "line": 26
        },
        {
          "file": "src/store/memory/store_destroy.c",
          "line": 31
        },
        {
          "file": "src/store/memory/store_destroy.c",
          "line": 36
        },
        {
          "file": "src/security/audit/security_audit_log/security_audit_log.c",
          "line": 40
        },
        {
          "file": "src/bindings/c_api/processor/xmd_processor_free/xmd_processor_free.c",
          "line": 22
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "index",
      "calls": [
        {
          "file": "src/ast/substitution/ast_interpolate_string.c",
          "line": 189
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "variable_get_string",
      "calls": [
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 39
        },
        {
          "file": "src/ast/json/json_functions.c",
          "line": 97
        },
        {
          "file": "src/ast/evaluator/expression/ast_evaluate_identifier/ast_evaluate_identifier.c",
          "line": 45
        },
        {
          "file": "src/variable/operations/variable_get_string/variable_get_string.c",
          "line": 18
        },
        {
          "file": "include/variable.h",
          "line": 285
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "item",
      "calls": [
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 198
        },
        {
          "file": "include/token.h",
          "line": 23
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "value",
      "calls": [
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 240
        },
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 252
        },
        {
          "file": "src/ast/parser/object/ast_parse_object_creation.c",
          "line": 59
        },
        {
          "file": "src/ast/parser/literal/ast_parse_single_value/ast_parse_single_value.c",
          "line": 16
        },
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 58
        },
        {
          "file": "src/ast/evaluator/function/ast_evaluate_function_call/ast_evaluate_function_call.c",
          "line": 100
        },
        {
          "file": "src/ast/evaluator/misc/ast_evaluate/ast_evaluate.c",
          "line": 50
        },
        {
          "file": "src/ast/node/create/ast_create_string_literal/ast_create_string_literal.c",
          "line": 17
        },
        {
          "file": "src/token/create/token_create.c",
          "line": 20
        },
        {
          "file": "src/token/operations/token_set_value/token_set_value.c",
          "line": 17
        },
        {
          "file": "include/token.h",
          "line": 95
        },
        {
          "file": "include/token.h",
          "line": 154
        },
        {
          "file": "include/variable.h",
          "line": 23
        },
        {
          "file": "include/variable.h",
          "line": 80
        },
        {
          "file": "include/variable.h",
          "line": 109
        },
        {
          "file": "include/variable.h",
          "line": 166
        },
        {
          "file": "include/xmd.h",
          "line": 194
        },
        {
          "file": "include/store_internal.h",
          "line": 27
        },
        {
          "file": "include/ast_parser.h",
          "line": 60
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "stringify",
      "calls": [
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 295
        },
        {
          "file": "src/ast/json/json_functions.c",
          "line": 528
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "arguments",
      "calls": [
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 296
        },
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 336
        },
        {
          "file": "src/ast/json/json_functions.c",
          "line": 529
        },
        {
          "file": "src/ast/json/json_functions.c",
          "line": 569
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "parse",
      "calls": [
        {
          "file": "src/ast/yaml/yaml_functions.c",
          "line": 335
        },
        {
          "file": "src/ast/json/json_functions.c",
          "line": 568
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "variable",
      "calls": [
        {
          "file": "src/ast/json/json_functions.c",
          "line": 284
        },
        {
          "file": "include/variable.h",
          "line": 58
        },
        {
          "file": "include/variable.h",
          "line": 203
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "key",
      "calls": [
        {
          "file": "src/ast/json/json_functions.c",
          "line": 313
        },
        {
          "file": "src/ast/parser/object/ast_parse_object_creation.c",
          "line": 42
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "char",
      "calls": [
        {
          "file": "src/ast/json/json_functions.c",
          "line": 322
        },
        {
          "file": "src/ast/json/json_functions.c",
          "line": 459
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "directives",
      "calls": [
        {
          "file": "src/ast/preprocess/extract_xmd_directives.c",
          "line": 16
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "statements",
      "calls": [
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 39
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 109
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "loops",
      "calls": [
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 66
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "calls",
      "calls": [
        {
          "file": "src/ast/parser/statement/ast_parse_statement.c",
          "line": 208
        },
        {
          "file": "include/ast.h",
          "line": 39
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "position",
      "calls": [
        {
          "file": "src/ast/parser/conditional/ast_parse_conditional.c",
          "line": 17
        },
        {
          "file": "src/ast/parser/class/ast_parse_method/ast_parse_method.c",
          "line": 23
        },
        {
          "file": "src/ast/parser/loop/ast_parse_loop/ast_parse_loop.c",
          "line": 25
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement/ast_parse_statement.c",
          "line": 17
        },
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 16
        },
        {
          "file": "include/lexer.h",
          "line": 59
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "expression",
      "calls": [
        {
          "file": "src/ast/parser/conditional/ast_parse_conditional.c",
          "line": 26
        },
        {
          "file": "src/ast/parser/function/ast_parse_potential_function_call/ast_parse_potential_function_call.c",
          "line": 178
        },
        {
          "file": "src/ast/parser/expression/ast_parse_primary/ast_parse_primary.c",
          "line": 20
        },
        {
          "file": "src/ast/parser/expression/ast_parse_expression/ast_parse_expression.c",
          "line": 19
        },
        {
          "file": "src/ast/parser/statement/ast_parse_statement/ast_parse_statement.c",
          "line": 84
        },
        {
          "file": "src/ast/node/create/ast_create_conditional/ast_create_conditional.c",
          "line": 17
        },
        {
          "file": "src/ast/node/misc/ast_create_return/ast_create_return.c",
          "line": 18
        },
        {
          "file": "include/ast.h",
          "line": 267
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "NULL",
      "calls": [
        {
          "file": "src/ast/parser/variable/ast_parse_multiple_variables_handler.c",
          "line": 26
        },
        {
          "file": "src/ast/evaluator/control/ast_evaluate_continue/ast_evaluate_continue.c",
          "line": 24
        },
        {
          "file": "src/ast/evaluator/control/ast_evaluate_break/ast_evaluate_break.c",
          "line": 24
        },
        {
          "file": "include/utils.h",
          "line": 109
        },
        {
          "file": "include/ast_parser.h",
          "line": 76
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "node",
      "calls": [
        {
          "file": "src/ast/parser/object/ast_parse_object_creation.c",
          "line": 34
        },
        {
          "file": "src/ast/evaluator/function/ast_evaluate_function_def/ast_evaluate_function_def.c",
          "line": 21
        },
        {
          "file": "src/ast/evaluator/control/ast_evaluate_conditional/ast_evaluate_conditional.c",
          "line": 21
        },
        {
          "file": "src/ast/evaluator/loop/ast_evaluate_while_loop/ast_evaluate_while_loop.c",
          "line": 22
        },
        {
          "file": "src/ast/evaluator/loop/ast_evaluate_loop/ast_evaluate_loop.c",
          "line": 19
        },
        {
          "file": "src/ast/node/create/ast_create_loop/ast_create_loop.c",
          "line": 15
        },
        {
          "file": "src/ast/node/create/ast_create_conditional/ast_create_conditional.c",
          "line": 16
        },
        {
          "file": "include/ast.h",
          "line": 169
        },
        {
          "file": "include/ast.h",
          "line": 175
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "print",
      "calls": [
        {
          "file": "src/ast/parser/output/ast_parse_print.c",
          "line": 26
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "body",
      "calls": [
        {
          "file": "src/ast/parser/function/ast_parse_function/ast_parse_function.c",
          "line": 98
        },
        {
          "file": "src/ast/parser/class/ast_parse_method/ast_parse_method.c",
          "line": 74
        },
        {
          "file": "src/ast/parser/class/ast_parse_class/ast_parse_class.c",
          "line": 67
        },
        {
          "file": "src/ast/parser/loop/ast_parse_loop/ast_parse_loop.c",
          "line": 143
        },
        {
          "file": "src/ast/evaluator/loop/ast_evaluate_while_loop/ast_evaluate_while_loop.c",
          "line": 36
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "indented",
      "calls": [
        {
          "file": "src/ast/parser/function/ast_parse_function/ast_parse_function.c",
          "line": 102
        },
        {
          "file": "src/ast/parser/function/ast_parse_function/ast_parse_function.c",
          "line": 123
        },
        {
          "file": "src/ast/parser/class/ast_parse_method/ast_parse_method.c",
          "line": 77
        },
        {
          "file": "src/ast/parser/class/ast_parse_class/ast_parse_class.c",
          "line": 71
        },
        {
          "file": "src/ast/parser/class/ast_parse_class/ast_parse_class.c",
          "line": 90
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "name",
      "calls": [
        {
          "file": "src/ast/parser/function/ast_parse_potential_function_call/ast_parse_potential_function_call.c",
          "line": 28
        },
        {
          "file": "src/ast/parser/loop/ast_parse_loop/ast_parse_loop.c",
          "line": 95
        },
        {
          "file": "src/ast/node/create/ast_create_class_def/ast_create_class_def.c",
          "line": 19
        },
        {
          "file": "include/config.h",
          "line": 165
        },
        {
          "file": "include/store_internal.h",
          "line": 26
        },
        {
          "file": "include/ast.h",
          "line": 278
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "argument",
      "calls": [
        {
          "file": "src/ast/parser/function/ast_parse_potential_function_call/ast_parse_potential_function_call.c",
          "line": 93
        },
        {
          "file": "src/ast/parser/function/ast_parse_potential_function_call/ast_parse_potential_function_call.c",
          "line": 102
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "content",
      "calls": [
        {
          "file": "src/ast/parser/function/ast_parse_potential_function_call/ast_parse_potential_function_call.c",
          "line": 138
        },
        {
          "file": "include/token.h",
          "line": 84
        },
        {
          "file": "include/ast_evaluator.h",
          "line": 15
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "parameters",
      "calls": [
        {
          "file": "src/ast/parser/class/ast_parse_method/ast_parse_method.c",
          "line": 68
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "s",
      "calls": [
        {
          "file": "src/ast/parser/class/ast_parse_method/ast_parse_method.c",
          "line": 86
        },
        {
          "file": "src/security/audit/security_audit_log/security_audit_log.c",
          "line": 37
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "method",
      "calls": [
        {
          "file": "src/ast/parser/class/ast_parse_method/ast_parse_method.c",
          "line": 89
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "structure",
      "calls": [
        {
          "file": "src/ast/parser/loop/ast_parse_while/ast_parse_while.c",
          "line": 89
        },
        {
          "file": "include/lexer.h",
          "line": 17
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "literal",
      "calls": [
        {
          "file": "src/ast/parser/loop/ast_parse_loop/ast_parse_loop.c",
          "line": 110
        },
        {
          "file": "src/ast/parser/expression/ast_parse_expression/ast_parse_expression.c",
          "line": 198
        },
        {
          "file": "src/ast/evaluator/program/ast_evaluate_program_node.c",
          "line": 36
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "strtok",
      "calls": [
        {
          "file": "src/ast/parser/loop/ast_parse_loop/ast_parse_loop.c",
          "line": 119
        },
        {
          "file": "src/ast/parser/loop/ast_parse_loop/ast_parse_loop.c",
          "line": 132
        },
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 106
        },
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 113
        },
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 116
        },
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 158
        },
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 204
        },
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 208
        },
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 232
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "line",
      "calls": [
        {
          "file": "src/ast/parser/loop/ast_parse_loop/ast_parse_loop.c",
          "line": 188
        },
        {
          "file": "src/ast/parser/control/ast_parse_if_then/ast_parse_if_then.c",
          "line": 19
        },
        {
          "file": "include/lexer.h",
          "line": 66
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "range",
      "calls": [
        {
          "file": "src/ast/parser/loop/ast_parse_range_loop/ast_parse_range_loop.c",
          "line": 109
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "operators",
      "calls": [
        {
          "file": "src/ast/parser/expression/ast_parse_math_expression/ast_parse_math_expression.c",
          "line": 27
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "precedence",
      "calls": [
        {
          "file": "src/ast/parser/expression/ast_parse_math_expression/ast_parse_math_expression.c",
          "line": 30
        },
        {
          "file": "src/ast/parser/expression/ast_parse_comparison_expression/ast_parse_comparison_expression.c",
          "line": 41
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "operand",
      "calls": [
        {
          "file": "src/ast/parser/expression/ast_parse_math_expression/ast_parse_math_expression.c",
          "line": 62
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "array",
      "calls": [
        {
          "file": "src/ast/parser/expression/ast_parse_expression/ast_parse_expression.c",
          "line": 35
        },
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 96
        },
        {
          "file": "src/ast/evaluator/loop/ast_evaluate_loop/ast_evaluate_loop.c",
          "line": 65
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "strspn",
      "calls": [
        {
          "file": "src/ast/parser/expression/ast_parse_expression/ast_parse_expression.c",
          "line": 202
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "condition",
      "calls": [
        {
          "file": "src/ast/parser/control/ast_parse_else/ast_parse_else.c",
          "line": 30
        },
        {
          "file": "src/ast/evaluator/loop/ast_evaluate_while_loop/ast_evaluate_while_loop.c",
          "line": 49
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "XMD_NULL_CHECK",
      "calls": [
        {
          "file": "src/ast/parser/literal/ast_parse_number_literal/ast_parse_number_literal.c",
          "line": 46
        },
        {
          "file": "src/ast/node/create/ast_create_string_literal/ast_create_string_literal.c",
          "line": 22
        },
        {
          "file": "src/variable/create/variable_create_string/variable_create_string.c",
          "line": 28
        },
        {
          "file": "src/variable/operations/variable_copy/variable_copy.c",
          "line": 21
        },
        {
          "file": "src/utils/string/xmd_strtrim/xmd_strtrim.c",
          "line": 19
        },
        {
          "file": "src/utils/string/xmd_strdup/xmd_strdup.c",
          "line": 19
        },
        {
          "file": "src/utils/string/xmd_strdup/xmd_strdup.c",
          "line": 22
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "XMD_STRCPY_SAFE",
      "calls": [
        {
          "file": "src/ast/parser/literal/ast_parse_number_literal/ast_parse_number_literal.c",
          "line": 47
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "XMD_FREE_SAFE",
      "calls": [
        {
          "file": "src/ast/parser/literal/ast_parse_number_literal/ast_parse_number_literal.c",
          "line": 49
        },
        {
          "file": "src/ast/node/create/ast_create_string_literal/ast_create_string_literal.c",
          "line": 32
        },
        {
          "file": "src/variable/create/variable_create_string/variable_create_string.c",
          "line": 28
        },
        {
          "file": "src/store/operations/store_set/store_set.c",
          "line": 48
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "quote",
      "calls": [
        {
          "file": "src/ast/parser/literal/ast_parse_string_literal/ast_parse_string_literal.c",
          "line": 30
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "parser",
      "calls": [
        {
          "file": "src/ast/parser/literal/ast_parse_array_assignment/ast_parse_array_assignment.c",
          "line": 30
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "statement",
      "calls": [
        {
          "file": "src/ast/parser/statement/ast_parse_statement/ast_parse_statement.c",
          "line": 3
        },
        {
          "file": "include/ast.h",
          "line": 157
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "assignment",
      "calls": [
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 3
        },
        {
          "file": "include/ast.h",
          "line": 36
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "directly",
      "calls": [
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 66
        },
        {
          "file": "src/variable/operations/variable_get_number/variable_get_number.c",
          "line": 15
        },
        {
          "file": "src/variable/operations/variable_get_string/variable_get_string.c",
          "line": 15
        },
        {
          "file": "src/variable/operations/variable_get_boolean/variable_get_boolean.c",
          "line": 16
        },
        {
          "file": "include/variable.h",
          "line": 267
        },
        {
          "file": "include/variable.h",
          "line": 274
        },
        {
          "file": "include/variable.h",
          "line": 281
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "part",
      "calls": [
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 75
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "syntax",
      "calls": [
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 87
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "object",
      "calls": [
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 96
        },
        {
          "file": "src/variable/object/variable_object_find_key/variable_object_find_key.c",
          "line": 16
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "values",
      "calls": [
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 145
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "pair",
      "calls": [
        {
          "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
          "line": 200
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "XMD_VALIDATE_PTRS",
      "calls": [
        {
          "file": "src/ast/evaluator/assignment/ast_evaluate_assignment.c",
          "line": 26
        },
        {
          "file": "src/ast/evaluator/function/ast_evaluate_function_call/ast_evaluate_function_call.c",
          "line": 35
        },
        {
          "file": "src/ast/evaluator/program/ast_evaluate_program/ast_evaluate_program.c",
          "line": 20
        },
        {
          "file": "src/ast/evaluator/control/ast_evaluate_conditional/ast_evaluate_conditional.c",
          "line": 27
        },
        {
          "file": "src/ast/evaluator/expression/ast_evaluate_identifier/ast_evaluate_identifier.c",
          "line": 27
        },
        {
          "file": "src/ast/evaluator/expression/ast_evaluate_binary_op/ast_evaluate_binary_op.c",
          "line": 28
        },
        {
          "file": "src/ast/evaluator/misc/ast_evaluate_block/ast_evaluate_block.c",
          "line": 24
        },
        {
          "file": "src/store/operations/store_set/store_set.c",
          "line": 27
        },
        {
          "file": "src/store/operations/store_get/store_get.c",
          "line": 24
        },
        {
          "file": "src/utils/string/xmd_strcpy_safe/xmd_strcpy_safe.c",
          "line": 22
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "block",
      "calls": [
        {
          "file": "src/ast/evaluator/control/ast_evaluate_conditional/ast_evaluate_conditional.c",
          "line": 33
        },
        {
          "file": "include/token.h",
          "line": 24
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "behavior",
      "calls": [
        {
          "file": "src/ast/evaluator/loop/ast_evaluate_while_loop/ast_evaluate_while_loop.c",
          "line": 80
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "continue",
      "calls": [
        {
          "file": "src/ast/evaluator/loop/ast_evaluate_while_loop/ast_evaluate_while_loop.c",
          "line": 100
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "identifier",
      "calls": [
        {
          "file": "src/ast/evaluator/loop/ast_evaluate_loop/ast_evaluate_loop.c",
          "line": 35
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "opendir",
      "calls": [
        {
          "file": "src/ast/evaluator/fileio/ast_evaluate_file_list/ast_evaluate_file_list.c",
          "line": 42
        },
        {
          "file": "src/platform/directory/xmd_opendir/xmd_opendir.c",
          "line": 21
        },
        {
          "file": "src/platform/system/xmd_get_fd_count/xmd_get_fd_count.c",
          "line": 19
        },
        {
          "file": "src/resource/utils/count_file_descriptors/count_file_descriptors.c",
          "line": 12
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "readdir",
      "calls": [
        {
          "file": "src/ast/evaluator/fileio/ast_evaluate_file_list/ast_evaluate_file_list.c",
          "line": 49
        },
        {
          "file": "src/platform/directory/xmd_readdir/xmd_readdir.c",
          "line": 22
        },
        {
          "file": "src/platform/system/xmd_get_fd_count/xmd_get_fd_count.c",
          "line": 23
        },
        {
          "file": "src/resource/utils/count_file_descriptors/count_file_descriptors.c",
          "line": 17
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "closedir",
      "calls": [
        {
          "file": "src/ast/evaluator/fileio/ast_evaluate_file_list/ast_evaluate_file_list.c",
          "line": 62
        },
        {
          "file": "src/platform/directory/xmd_closedir/xmd_closedir.c",
          "line": 17
        },
        {
          "file": "src/platform/system/xmd_get_fd_count/xmd_get_fd_count.c",
          "line": 28
        },
        {
          "file": "src/resource/utils/count_file_descriptors/count_file_descriptors.c",
          "line": 23
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "remove",
      "calls": [
        {
          "file": "src/ast/evaluator/fileio/ast_evaluate_file_delete/ast_evaluate_file_delete.c",
          "line": 33
        },
        {
          "file": "src/ast/evaluator/fileio/ast_evaluate_file_delete/ast_evaluate_file_delete.c",
          "line": 34
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "XMD_MALLOC_SAFE",
      "calls": [
        {
          "file": "src/ast/node/create/ast_create_string_literal/ast_create_string_literal.c",
          "line": 24
        },
        {
          "file": "src/ast/node/create/ast_create_number_literal/ast_create_number_literal.c",
          "line": 21
        },
        {
          "file": "src/token/create/token_create.c",
          "line": 26
        },
        {
          "file": "src/variable/create/variable_create_number/variable_create_number.c",
          "line": 21
        },
        {
          "file": "src/variable/create/variable_create_string/variable_create_string.c",
          "line": 22
        },
        {
          "file": "src/store/operations/store_set/store_set.c",
          "line": 43
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "type",
      "calls": [
        {
          "file": "src/ast/node/create/ast_create_literal/ast_create_literal.c",
          "line": 18
        },
        {
          "file": "src/parsers/unified/parse_content.c",
          "line": 27
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "c",
      "calls": [
        {
          "file": "src/ast/node/create/ast_create_method_def/ast_create_method_def.c",
          "line": 7
        },
        {
          "file": "src/ast/node/create/ast_create_class_def/ast_create_class_def.c",
          "line": 9
        },
        {
          "file": "src/parsers/detection/detect_parser_type.c",
          "line": 7
        },
        {
          "file": "src/parsers/unified/parse_content.c",
          "line": 7
        },
        {
          "file": "src/parsers/json/parse_json_value/parse_json_value.c",
          "line": 7
        },
        {
          "file": "src/parsers/yaml/parse_yaml_value/parse_yaml_value.c",
          "line": 7
        },
        {
          "file": "src/conditional/condition_context_free/condition_context_free.c",
          "line": 7
        },
        {
          "file": "src/conditional/evaluate_condition/evaluate_condition.c",
          "line": 7
        },
        {
          "file": "src/bindings/c_api/results/c_api_create_result/c_api_create_result.c",
          "line": 7
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "command",
      "calls": [
        {
          "file": "src/ast/node/misc/ast_create_directive/ast_create_directive.c",
          "line": 18
        },
        {
          "file": "include/sandbox.h",
          "line": 127
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "strings",
      "calls": [
        {
          "file": "src/config/create/config_destroy/config_destroy.c",
          "line": 23
        },
        {
          "file": "src/variable/object/variable_object_keys/variable_object_keys.c",
          "line": 19
        },
        {
          "file": "src/store/operations/store_keys/store_keys.c",
          "line": 19
        },
        {
          "file": "include/variable.h",
          "line": 198
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "getenv",
      "calls": [
        {
          "file": "src/config/load/config_load_env/config_load_env.c",
          "line": 24
        },
        {
          "file": "src/config/load/config_load_env/config_load_env.c",
          "line": 30
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "fgets",
      "calls": [
        {
          "file": "src/config/load/config_load_file/config_load_file.c",
          "line": 28
        },
        {
          "file": "src/platform/memory/xmd_get_memory_usage/xmd_get_memory_usage.c",
          "line": 22
        },
        {
          "file": "src/resource/utils/get_memory_usage/get_memory_usage.c",
          "line": 18
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "strcspn",
      "calls": [
        {
          "file": "src/config/load/config_load_file/config_load_file.c",
          "line": 30
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "loading",
      "calls": [
        {
          "file": "src/config/load/config_load_file/config_load_file.c",
          "line": 43
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "declaration",
      "calls": [
        {
          "file": "src/config/validate/config_get_global/config_get_global.c",
          "line": 12
        },
        {
          "file": "src/config/validate/config_set_global/config_set_global.c",
          "line": 12
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "patterns",
      "calls": [
        {
          "file": "src/parsers/detection/detect_parser_type.c",
          "line": 38
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "colon",
      "calls": [
        {
          "file": "src/parsers/detection/detect_parser_type.c",
          "line": 52
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "parsing",
      "calls": [
        {
          "file": "src/parsers/json/parse_json_value/parse_json_value.c",
          "line": 25
        },
        {
          "file": "src/parsers/yaml/parse_yaml_value/parse_yaml_value.c",
          "line": 26
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "XMD_STRDUP_SAFE",
      "calls": [
        {
          "file": "src/token/create/token_create.c",
          "line": 34
        },
        {
          "file": "src/variable/create/variable_create_string/variable_create_string.c",
          "line": 31
        },
        {
          "file": "src/store/operations/store_set/store_set.c",
          "line": 46
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "token_type_to_string",
      "calls": [
        {
          "file": "src/token/convert/token_to_string.c",
          "line": 28
        },
        {
          "file": "src/token/type/token_type_to_string/token_type_to_string.c",
          "line": 17
        },
        {
          "file": "include/token.h",
          "line": 137
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "pointer",
      "calls": [
        {
          "file": "src/token/operations/token_equals/token_equals.c",
          "line": 39
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "data",
      "calls": [
        {
          "file": "src/token/operations/token_copy/token_copy.c",
          "line": 16
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "list",
      "calls": [
        {
          "file": "src/token/list/token_list_destroy/token_list_destroy.c",
          "line": 15
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "retrieve",
      "calls": [
        {
          "file": "src/token/list/token_list_get/token_list_get.c",
          "line": 16
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "isnan",
      "calls": [
        {
          "file": "src/variable/operations/variable_to_boolean/variable_to_boolean.c",
          "line": 32
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "contents",
      "calls": [
        {
          "file": "src/variable/array/variable_array_free/variable_array_free.c",
          "line": 16
        },
        {
          "file": "src/variable/object/variable_object_free/variable_object_free.c",
          "line": 17
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "length",
      "calls": [
        {
          "file": "src/variable/array/variable_array_length/variable_array_length.c",
          "line": 16
        },
        {
          "file": "include/output.h",
          "line": 109
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "clock_gettime",
      "calls": [
        {
          "file": "src/performance/timing/get_time_ns.c",
          "line": 10
        },
        {
          "file": "src/platform/time/xmd_get_time.c",
          "line": 26
        },
        {
          "file": "src/platform/time/xmd_get_time.c",
          "line": 28
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "ns",
      "calls": [
        {
          "file": "src/performance/profiler/perf_profiler_generate_report/perf_profiler_generate_report.c",
          "line": 27
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "u",
      "calls": [
        {
          "file": "src/performance/profiler/perf_profiler_generate_report/perf_profiler_generate_report.c",
          "line": 28
        },
        {
          "file": "src/performance/profiler/perf_profiler_generate_report/perf_profiler_generate_report.c",
          "line": 29
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "perf_profiler_get_metrics",
      "calls": [
        {
          "file": "src/performance/profiler/perf_profiler_get_metrics/perf_profiler_get_metrics.c",
          "line": 11
        },
        {
          "file": "include/performance.h",
          "line": 175
        },
        {
          "file": "include/profiler_internal.h",
          "line": 30
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "benchmark_run",
      "calls": [
        {
          "file": "src/performance/benchmark/benchmark_run/benchmark_run.c",
          "line": 23
        },
        {
          "file": "include/performance.h",
          "line": 210
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "int",
      "calls": [
        {
          "file": "src/performance/benchmark/benchmark_run/benchmark_run.c",
          "line": 24
        },
        {
          "file": "include/performance.h",
          "line": 211
        },
        {
          "file": "include/loop_internal.h",
          "line": 29
        },
        {
          "file": "include/loop_internal.h",
          "line": 34
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "test_func",
      "calls": [
        {
          "file": "src/performance/benchmark/benchmark_run/benchmark_run.c",
          "line": 48
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "strncat",
      "calls": [
        {
          "file": "src/performance/benchmark/benchmark_generate_report/benchmark_generate_report.c",
          "line": 44
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "qsort",
      "calls": [
        {
          "file": "src/performance/metrics/calculate_stats/calculate_stats.c",
          "line": 20
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "QueryPerformanceFrequency",
      "calls": [
        {
          "file": "src/platform/time/xmd_get_time.c",
          "line": 18
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "QueryPerformanceCounter",
      "calls": [
        {
          "file": "src/platform/time/xmd_get_time.c",
          "line": 18
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "GetFileAttributesA",
      "calls": [
        {
          "file": "src/platform/filesystem/xmd_file_exists/xmd_file_exists.c",
          "line": 16
        },
        {
          "file": "src/platform/filesystem/xmd_is_directory/xmd_is_directory.c",
          "line": 16
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "access",
      "calls": [
        {
          "file": "src/platform/filesystem/xmd_file_exists/xmd_file_exists.c",
          "line": 19
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "stat",
      "calls": [
        {
          "file": "src/platform/filesystem/xmd_is_directory/xmd_is_directory.c",
          "line": 21
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "S_ISDIR",
      "calls": [
        {
          "file": "src/platform/filesystem/xmd_is_directory/xmd_is_directory.c",
          "line": 22
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "CreateDirectoryA",
      "calls": [
        {
          "file": "src/platform/filesystem/xmd_mkdir/xmd_mkdir.c",
          "line": 15
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "mkdir",
      "calls": [
        {
          "file": "src/platform/filesystem/xmd_mkdir/xmd_mkdir.c",
          "line": 17
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "_aligned_malloc",
      "calls": [
        {
          "file": "src/platform/memory/xmd_aligned_alloc/xmd_aligned_alloc.c",
          "line": 16
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "posix_memalign",
      "calls": [
        {
          "file": "src/platform/memory/xmd_aligned_alloc/xmd_aligned_alloc.c",
          "line": 20
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "_aligned_free",
      "calls": [
        {
          "file": "src/platform/memory/xmd_aligned_free/xmd_aligned_free.c",
          "line": 15
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "GlobalMemoryStatusEx",
      "calls": [
        {
          "file": "src/platform/memory/xmd_get_memory_size/xmd_get_memory_size.c",
          "line": 16
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "sysconf",
      "calls": [
        {
          "file": "src/platform/memory/xmd_get_memory_size/xmd_get_memory_size.c",
          "line": 20
        },
        {
          "file": "src/platform/memory/xmd_get_memory_size/xmd_get_memory_size.c",
          "line": 21
        },
        {
          "file": "src/platform/system/xmd_get_cpu_count/xmd_get_cpu_count.c",
          "line": 18
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "GetProcessMemoryInfo",
      "calls": [
        {
          "file": "src/platform/memory/xmd_get_memory_usage/xmd_get_memory_usage.c",
          "line": 15
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "GetCurrentProcess",
      "calls": [
        {
          "file": "src/platform/memory/xmd_get_memory_usage/xmd_get_memory_usage.c",
          "line": 15
        },
        {
          "file": "src/platform/system/xmd_get_cpu_time/xmd_get_cpu_time.c",
          "line": 16
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "defined",
      "calls": [
        {
          "file": "src/platform/memory/xmd_get_memory_usage/xmd_get_memory_usage.c",
          "line": 18
        },
        {
          "file": "src/platform/memory/xmd_get_memory_usage/xmd_get_memory_usage.c",
          "line": 18
        },
        {
          "file": "include/platform.h",
          "line": 21
        },
        {
          "file": "include/platform.h",
          "line": 43
        },
        {
          "file": "include/platform.h",
          "line": 43
        },
        {
          "file": "include/platform.h",
          "line": 43
        },
        {
          "file": "include/platform.h",
          "line": 50
        },
        {
          "file": "include/platform.h",
          "line": 58
        },
        {
          "file": "include/platform.h",
          "line": 61
        },
        {
          "file": "include/platform.h",
          "line": 63
        },
        {
          "file": "include/platform.h",
          "line": 63
        },
        {
          "file": "include/platform.h",
          "line": 70
        },
        {
          "file": "include/platform.h",
          "line": 70
        },
        {
          "file": "include/platform.h",
          "line": 70
        },
        {
          "file": "include/platform.h",
          "line": 70
        },
        {
          "file": "include/platform.h",
          "line": 70
        },
        {
          "file": "include/platform.h",
          "line": 72
        },
        {
          "file": "include/platform.h",
          "line": 72
        },
        {
          "file": "include/platform.h",
          "line": 72
        },
        {
          "file": "include/platform.h",
          "line": 72
        },
        {
          "file": "include/platform.h",
          "line": 74
        },
        {
          "file": "include/platform.h",
          "line": 74
        },
        {
          "file": "include/platform.h",
          "line": 76
        },
        {
          "file": "include/platform.h",
          "line": 76
        },
        {
          "file": "include/platform.h",
          "line": 83
        },
        {
          "file": "include/platform.h",
          "line": 85
        },
        {
          "file": "include/platform.h",
          "line": 87
        },
        {
          "file": "include/platform.h",
          "line": 118
        },
        {
          "file": "include/platform.h",
          "line": 118
        },
        {
          "file": "include/platform.h",
          "line": 221
        },
        {
          "file": "include/platform.h",
          "line": 221
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "sscanf",
      "calls": [
        {
          "file": "src/platform/memory/xmd_get_memory_usage/xmd_get_memory_usage.c",
          "line": 25
        },
        {
          "file": "src/resource/utils/get_memory_usage/get_memory_usage.c",
          "line": 20
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "_findclose",
      "calls": [
        {
          "file": "src/platform/directory/xmd_closedir/xmd_closedir.c",
          "line": 15
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "_findfirst",
      "calls": [
        {
          "file": "src/platform/directory/xmd_opendir/xmd_opendir.c",
          "line": 19
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "_findnext",
      "calls": [
        {
          "file": "src/platform/directory/xmd_readdir/xmd_readdir.c",
          "line": 17
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "CloseHandle",
      "calls": [
        {
          "file": "src/platform/process/xmd_process_close/xmd_process_close.c",
          "line": 14
        },
        {
          "file": "src/platform/process/xmd_process_create/xmd_process_create.c",
          "line": 36
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "POSIX",
      "calls": [
        {
          "file": "src/platform/process/xmd_process_close/xmd_process_close.c",
          "line": 16
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "TerminateProcess",
      "calls": [
        {
          "file": "src/platform/process/xmd_process_kill/xmd_process_kill.c",
          "line": 15
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "kill",
      "calls": [
        {
          "file": "src/platform/process/xmd_process_kill/xmd_process_kill.c",
          "line": 17
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "WaitForSingleObject",
      "calls": [
        {
          "file": "src/platform/process/xmd_process_wait/xmd_process_wait.c",
          "line": 19
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "GetExitCodeProcess",
      "calls": [
        {
          "file": "src/platform/process/xmd_process_wait/xmd_process_wait.c",
          "line": 25
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "waitpid",
      "calls": [
        {
          "file": "src/platform/process/xmd_process_wait/xmd_process_wait.c",
          "line": 39
        },
        {
          "file": "src/platform/process/xmd_process_wait/xmd_process_wait.c",
          "line": 49
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "sigemptyset",
      "calls": [
        {
          "file": "src/platform/process/xmd_process_wait/xmd_process_wait.c",
          "line": 44
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "sigaction",
      "calls": [
        {
          "file": "src/platform/process/xmd_process_wait/xmd_process_wait.c",
          "line": 47
        },
        {
          "file": "src/platform/process/xmd_process_wait/xmd_process_wait.c",
          "line": 51
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "alarm",
      "calls": [
        {
          "file": "src/platform/process/xmd_process_wait/xmd_process_wait.c",
          "line": 48
        },
        {
          "file": "src/platform/process/xmd_process_wait/xmd_process_wait.c",
          "line": 50
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "WIFEXITED",
      "calls": [
        {
          "file": "src/platform/process/xmd_process_wait/xmd_process_wait.c",
          "line": 57
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "WEXITSTATUS",
      "calls": [
        {
          "file": "src/platform/process/xmd_process_wait/xmd_process_wait.c",
          "line": 58
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "ZeroMemory",
      "calls": [
        {
          "file": "src/platform/process/xmd_process_create/xmd_process_create.c",
          "line": 21
        },
        {
          "file": "src/platform/process/xmd_process_create/xmd_process_create.c",
          "line": 23
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "CreateProcessA",
      "calls": [
        {
          "file": "src/platform/process/xmd_process_create/xmd_process_create.c",
          "line": 33
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "fork",
      "calls": [
        {
          "file": "src/platform/process/xmd_process_create/xmd_process_create.c",
          "line": 40
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "execvp",
      "calls": [
        {
          "file": "src/platform/process/xmd_process_create/xmd_process_create.c",
          "line": 46
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "execl",
      "calls": [
        {
          "file": "src/platform/process/xmd_process_create/xmd_process_create.c",
          "line": 48
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "DeleteCriticalSection",
      "calls": [
        {
          "file": "src/platform/threading/xmd_mutex_destroy/xmd_mutex_destroy.c",
          "line": 16
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "pthread_mutex_destroy",
      "calls": [
        {
          "file": "src/platform/threading/xmd_mutex_destroy/xmd_mutex_destroy.c",
          "line": 19
        },
        {
          "file": "src/security/audit/security_audit_init/security_audit_init.c",
          "line": 35
        },
        {
          "file": "src/security/audit/security_audit_init/security_audit_init.c",
          "line": 42
        },
        {
          "file": "src/security/audit/security_audit_cleanup/security_audit_cleanup.c",
          "line": 32
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "InitializeCriticalSection",
      "calls": [
        {
          "file": "src/platform/threading/xmd_mutex_init/xmd_mutex_init.c",
          "line": 16
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "pthread_mutex_init",
      "calls": [
        {
          "file": "src/platform/threading/xmd_mutex_init/xmd_mutex_init.c",
          "line": 19
        },
        {
          "file": "src/security/audit/security_audit_init/security_audit_init.c",
          "line": 29
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "EnterCriticalSection",
      "calls": [
        {
          "file": "src/platform/threading/xmd_mutex_lock/xmd_mutex_lock.c",
          "line": 16
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "pthread_mutex_lock",
      "calls": [
        {
          "file": "src/platform/threading/xmd_mutex_lock/xmd_mutex_lock.c",
          "line": 19
        },
        {
          "file": "src/security/audit/security_audit_log/security_audit_log.c",
          "line": 33
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "LeaveCriticalSection",
      "calls": [
        {
          "file": "src/platform/threading/xmd_mutex_unlock/xmd_mutex_unlock.c",
          "line": 16
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "pthread_mutex_unlock",
      "calls": [
        {
          "file": "src/platform/threading/xmd_mutex_unlock/xmd_mutex_unlock.c",
          "line": 19
        },
        {
          "file": "src/security/audit/security_audit_log/security_audit_log.c",
          "line": 42
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "GetSystemInfo",
      "calls": [
        {
          "file": "src/platform/system/xmd_get_cpu_count/xmd_get_cpu_count.c",
          "line": 15
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "GetProcessTimes",
      "calls": [
        {
          "file": "src/platform/system/xmd_get_cpu_time/xmd_get_cpu_time.c",
          "line": 16
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "getrusage",
      "calls": [
        {
          "file": "src/platform/system/xmd_get_cpu_time/xmd_get_cpu_time.c",
          "line": 28
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "GetTickCount64",
      "calls": [
        {
          "file": "src/platform/system/xmd_get_tick_count/xmd_get_tick_count.c",
          "line": 14
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "Sleep",
      "calls": [
        {
          "file": "src/platform/system/xmd_sleep_ms/xmd_sleep_ms.c",
          "line": 15
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "usleep",
      "calls": [
        {
          "file": "src/platform/system/xmd_sleep_ms/xmd_sleep_ms.c",
          "line": 18
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "time",
      "calls": [
        {
          "file": "src/security/audit/security_audit_log/security_audit_log.c",
          "line": 36
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "HTML",
      "calls": [
        {
          "file": "src/security/sanitization/security_sanitize_html/security_sanitize_html.c",
          "line": 23
        },
        {
          "file": "include/output.h",
          "line": 24
        },
        {
          "file": "include/security.h",
          "line": 92
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "tag",
      "calls": [
        {
          "file": "src/security/utilities/extract_tag_name/extract_tag_name.c",
          "line": 15
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "tolower",
      "calls": [
        {
          "file": "src/security/utilities/extract_tag_name/extract_tag_name.c",
          "line": 32
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "strcasecmp",
      "calls": [
        {
          "file": "src/security/utilities/is_safe_html_tag/is_safe_html_tag.c",
          "line": 28
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "them",
      "calls": [
        {
          "file": "src/security/utilities/process_html_tag/process_html_tag.c",
          "line": 45
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "character",
      "calls": [
        {
          "file": "src/security/utilities/remove_ansi_codes/remove_ansi_codes.c",
          "line": 30
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_internal_config_get_global",
      "calls": [
        {
          "file": "src/resource/limiter/resource_limiter_new/resource_limiter_new.c",
          "line": 17
        },
        {
          "file": "include/config.h",
          "line": 129
        },
        {
          "file": "include/config_internal.h",
          "line": 40
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "getrlimit",
      "calls": [
        {
          "file": "src/resource/utils/count_file_descriptors/count_file_descriptors.c",
          "line": 28
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "file",
      "calls": [
        {
          "file": "src/bindings/c_api/initialization/c_api_xmd_init/c_api_xmd_init.c",
          "line": 18
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "use",
      "calls": [
        {
          "file": "src/bindings/c_api/processor/xmd_processor_create/xmd_processor_create.c",
          "line": 17
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "config",
      "calls": [
        {
          "file": "src/bindings/c_api/processor/xmd_processor_create/xmd_processor_create.c",
          "line": 32
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "result",
      "calls": [
        {
          "file": "src/bindings/c_api/processing/xmd_process_string_api/xmd_process_string_api.c",
          "line": 24
        },
        {
          "file": "src/bindings/c_api/processing/xmd_process_string/xmd_process_string.c",
          "line": 23
        },
        {
          "file": "include/cli.h",
          "line": 278
        },
        {
          "file": "include/executor.h",
          "line": 76
        },
        {
          "file": "include/executor.h",
          "line": 86
        },
        {
          "file": "include/xmd.h",
          "line": 160
        },
        {
          "file": "include/xmd.h",
          "line": 170
        },
        {
          "file": "include/xmd.h",
          "line": 180
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "clock",
      "calls": [
        {
          "file": "src/bindings/c_api/processing/xmd_process_string_api/xmd_process_string_api.c",
          "line": 37
        },
        {
          "file": "src/bindings/c_api/processing/xmd_process_string_api/xmd_process_string_api.c",
          "line": 43
        },
        {
          "file": "src/bindings/c_api/processing/xmd_process_string/xmd_process_string.c",
          "line": 37
        },
        {
          "file": "src/bindings/c_api/processing/xmd_process_string/xmd_process_string.c",
          "line": 43
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "message",
      "calls": [
        {
          "file": "src/bindings/c_api/results/c_api_create_result/c_api_create_result.c",
          "line": 18
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "bindings_get_version",
      "calls": [
        {
          "file": "src/bindings/c_api/version/bindings_get_version/bindings_get_version.c",
          "line": 16
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "0",
      "calls": [
        {
          "file": "src/bindings/c_api/version/bindings_get_version/bindings_get_version.c",
          "line": 17
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "XMD_CHECK_RANGE",
      "calls": [
        {
          "file": "src/utils/memory/xmd_malloc/xmd_malloc.c",
          "line": 20
        },
        {
          "file": "src/utils/string/xmd_strcpy_safe/xmd_strcpy_safe.c",
          "line": 23
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "hash_string",
      "calls": [
        {
          "file": "src/utils/hash/hash_string/hash_string.c",
          "line": 16
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "trim",
      "calls": [
        {
          "file": "src/utils/string/xmd_strtrim/xmd_strtrim.c",
          "line": 15
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "watch",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 53
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cli_init",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 138
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cli_parse_args",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 146
        },
        {
          "file": "include/parser_internal.h",
          "line": 19
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cli_execute",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 153
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cli_show_help",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 159
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cli_show_version",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 164
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cli_cleanup",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 170
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "path",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 175
        },
        {
          "file": "include/cli.h",
          "line": 199
        },
        {
          "file": "include/dependency.h",
          "line": 151
        },
        {
          "file": "include/module.h",
          "line": 150
        },
        {
          "file": "include/sandbox.h",
          "line": 139
        },
        {
          "file": "include/sandbox.h",
          "line": 141
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cli_process_file",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 179
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cli_watch_directory",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 187
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cli_validate_file",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 195
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cli_show_config",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 202
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "plugin_manager_create",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 208
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "config_get",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 241
        },
        {
          "file": "include/cli.h",
          "line": 321
        },
        {
          "file": "include/cli.h",
          "line": 330
        },
        {
          "file": "include/cli.h",
          "line": 339
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "config_set",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 250
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "config_validate",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 257
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "Functions",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 267
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_validate",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 280
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_set_config",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 289
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "found",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 295
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_get_config",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 297
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "CLI_HAS_ARG",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 314
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "CONFIG_GET_STRING",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 319
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "CONFIG_GET_INT",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 328
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "CONFIG_GET_BOOL",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 337
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "context",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 346
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cli_xmd_cleanup",
      "calls": [
        {
          "file": "include/cli.h",
          "line": 349
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "evaluate",
      "calls": [
        {
          "file": "include/conditional.h",
          "line": 74
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "condition_evaluate",
      "calls": [
        {
          "file": "include/conditional.h",
          "line": 78
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "false",
      "calls": [
        {
          "file": "include/conditional.h",
          "line": 85
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "if_statement_process",
      "calls": [
        {
          "file": "include/conditional.h",
          "line": 90
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "elif",
      "calls": [
        {
          "file": "include/conditional.h",
          "line": 95
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "elif_statement_process",
      "calls": [
        {
          "file": "include/conditional.h",
          "line": 104
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "condition_logical_and",
      "calls": [
        {
          "file": "include/conditional.h",
          "line": 114
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "condition_logical_or",
      "calls": [
        {
          "file": "include/conditional.h",
          "line": 122
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "condition_logical_not",
      "calls": [
        {
          "file": "include/conditional.h",
          "line": 130
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "status",
      "calls": [
        {
          "file": "include/config.h",
          "line": 40
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "descriptors",
      "calls": [
        {
          "file": "include/config.h",
          "line": 41
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_internal_config_new",
      "calls": [
        {
          "file": "include/config.h",
          "line": 94
        },
        {
          "file": "include/config_internal.h",
          "line": 30
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_internal_config_free",
      "calls": [
        {
          "file": "include/config.h",
          "line": 100
        },
        {
          "file": "include/config_internal.h",
          "line": 33
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_internal_config_load_file",
      "calls": [
        {
          "file": "include/config.h",
          "line": 108
        },
        {
          "file": "include/config_internal.h",
          "line": 38
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_internal_config_save_file",
      "calls": [
        {
          "file": "include/config.h",
          "line": 116
        },
        {
          "file": "include/config_internal.h",
          "line": 39
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_internal_config_load_env",
      "calls": [
        {
          "file": "include/config.h",
          "line": 123
        },
        {
          "file": "include/config_internal.h",
          "line": 37
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_internal_config_set_global",
      "calls": [
        {
          "file": "include/config.h",
          "line": 135
        },
        {
          "file": "include/config_internal.h",
          "line": 41
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_internal_config_add_module_path",
      "calls": [
        {
          "file": "include/config.h",
          "line": 143
        },
        {
          "file": "include/config_internal.h",
          "line": 42
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_internal_config_add_exec_whitelist",
      "calls": [
        {
          "file": "include/config.h",
          "line": 151
        },
        {
          "file": "include/config_internal.h",
          "line": 43
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "whitelist",
      "calls": [
        {
          "file": "include/config.h",
          "line": 154
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_internal_config_set_exec_whitelist",
      "calls": [
        {
          "file": "include/config.h",
          "line": 160
        },
        {
          "file": "include/config_internal.h",
          "line": 44
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_internal_config_load_whitelist_env",
      "calls": [
        {
          "file": "include/config.h",
          "line": 168
        },
        {
          "file": "include/config_internal.h",
          "line": 45
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "detection",
      "calls": [
        {
          "file": "include/dependency.h",
          "line": 27
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "dependency_get_cycle_path",
      "calls": [
        {
          "file": "include/dependency.h",
          "line": 155
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "graph",
      "calls": [
        {
          "file": "include/dependency.h",
          "line": 162
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "dependency_build_graph",
      "calls": [
        {
          "file": "include/dependency.h",
          "line": 165
        },
        {
          "file": "include/dependency_graph_internal.h",
          "line": 30
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "clear_cycle_path",
      "calls": [
        {
          "file": "include/dependency.h",
          "line": 184
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "dfs_cycle_detection",
      "calls": [
        {
          "file": "include/dependency.h",
          "line": 192
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "error_context_new",
      "calls": [
        {
          "file": "include/error.h",
          "line": 64
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "error_context_free",
      "calls": [
        {
          "file": "include/error.h",
          "line": 70
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "try_block_begin",
      "calls": [
        {
          "file": "include/error.h",
          "line": 77
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "try_block_end",
      "calls": [
        {
          "file": "include/error.h",
          "line": 84
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "catch_block_begin",
      "calls": [
        {
          "file": "include/error.h",
          "line": 92
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "catch_block_end",
      "calls": [
        {
          "file": "include/error.h",
          "line": 99
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "error_throw",
      "calls": [
        {
          "file": "include/error.h",
          "line": 110
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "error_get_current",
      "calls": [
        {
          "file": "include/error.h",
          "line": 118
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "error_is_caught",
      "calls": [
        {
          "file": "include/error.h",
          "line": 125
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "error_clear",
      "calls": [
        {
          "file": "include/error.h",
          "line": 131
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "executor_context_new",
      "calls": [
        {
          "file": "include/executor.h",
          "line": 64
        },
        {
          "file": "include/executor_internal.h",
          "line": 31
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "executor_context_free",
      "calls": [
        {
          "file": "include/executor.h",
          "line": 70
        },
        {
          "file": "include/executor_internal.h",
          "line": 32
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "executor_run_command",
      "calls": [
        {
          "file": "include/executor.h",
          "line": 79
        },
        {
          "file": "include/executor_internal.h",
          "line": 35
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "executor_run_with_timeout",
      "calls": [
        {
          "file": "include/executor.h",
          "line": 89
        },
        {
          "file": "include/executor_internal.h",
          "line": 33
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "command_result_free",
      "calls": [
        {
          "file": "include/executor.h",
          "line": 96
        },
        {
          "file": "include/executor_internal.h",
          "line": 36
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "flow_context_new",
      "calls": [
        {
          "file": "include/flow.h",
          "line": 50
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "flow_context_free",
      "calls": [
        {
          "file": "include/flow.h",
          "line": 56
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "flow_break_statement",
      "calls": [
        {
          "file": "include/flow.h",
          "line": 63
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "flow_continue_statement",
      "calls": [
        {
          "file": "include/flow.h",
          "line": 70
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "flow_return_statement",
      "calls": [
        {
          "file": "include/flow.h",
          "line": 78
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "flow_check_status",
      "calls": [
        {
          "file": "include/flow.h",
          "line": 85
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "flow_get_return_value",
      "calls": [
        {
          "file": "include/flow.h",
          "line": 92
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "import",
      "calls": [
        {
          "file": "include/import_export.h",
          "line": 24
        },
        {
          "file": "include/import_export.h",
          "line": 49
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "symbol",
      "calls": [
        {
          "file": "include/import_export.h",
          "line": 50
        },
        {
          "file": "include/import_export.h",
          "line": 131
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "import_directive_new",
      "calls": [
        {
          "file": "include/import_export.h",
          "line": 53
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "import_directive_free",
      "calls": [
        {
          "file": "include/import_export.h",
          "line": 61
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "export_directive_new",
      "calls": [
        {
          "file": "include/import_export.h",
          "line": 69
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "export_directive_free",
      "calls": [
        {
          "file": "include/import_export.h",
          "line": 75
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "import_export_processor_new",
      "calls": [
        {
          "file": "include/import_export.h",
          "line": 83
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "import_export_processor_free",
      "calls": [
        {
          "file": "include/import_export.h",
          "line": 90
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "directive",
      "calls": [
        {
          "file": "include/import_export.h",
          "line": 95
        },
        {
          "file": "include/import_export.h",
          "line": 104
        },
        {
          "file": "include/token.h",
          "line": 26
        },
        {
          "file": "include/ast.h",
          "line": 35
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "import_parse_directive",
      "calls": [
        {
          "file": "include/import_export.h",
          "line": 98
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "export_parse_directive",
      "calls": [
        {
          "file": "include/import_export.h",
          "line": 107
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "import_process",
      "calls": [
        {
          "file": "include/import_export.h",
          "line": 116
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "export_process",
      "calls": [
        {
          "file": "include/import_export.h",
          "line": 124
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "import_symbol",
      "calls": [
        {
          "file": "include/import_export.h",
          "line": 134
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "import_all_symbols",
      "calls": [
        {
          "file": "include/import_export.h",
          "line": 145
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "export_symbol",
      "calls": [
        {
          "file": "include/import_export.h",
          "line": 154
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "skip_whitespace",
      "calls": [
        {
          "file": "include/import_export.h",
          "line": 163
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "word",
      "calls": [
        {
          "file": "include/import_export.h",
          "line": 168
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "extract_word",
      "calls": [
        {
          "file": "include/import_export.h",
          "line": 172
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_create",
      "calls": [
        {
          "file": "include/lexer.h",
          "line": 29
        },
        {
          "file": "include/lexer_internal.h",
          "line": 32
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_free",
      "calls": [
        {
          "file": "include/lexer.h",
          "line": 35
        },
        {
          "file": "include/lexer_internal.h",
          "line": 33
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "error",
      "calls": [
        {
          "file": "include/lexer.h",
          "line": 43
        },
        {
          "file": "include/lexer.h",
          "line": 50
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_next_token",
      "calls": [
        {
          "file": "include/lexer.h",
          "line": 45
        },
        {
          "file": "include/lexer_internal.h",
          "line": 46
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_peek_token",
      "calls": [
        {
          "file": "include/lexer.h",
          "line": 52
        },
        {
          "file": "include/lexer_internal.h",
          "line": 47
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_get_position",
      "calls": [
        {
          "file": "include/lexer.h",
          "line": 61
        },
        {
          "file": "include/lexer_internal.h",
          "line": 48
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_get_line",
      "calls": [
        {
          "file": "include/lexer.h",
          "line": 68
        },
        {
          "file": "include/lexer_internal.h",
          "line": 49
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "column",
      "calls": [
        {
          "file": "include/lexer.h",
          "line": 73
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_get_column",
      "calls": [
        {
          "file": "include/lexer.h",
          "line": 75
        },
        {
          "file": "include/lexer_internal.h",
          "line": 50
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_at_end",
      "calls": [
        {
          "file": "include/lexer.h",
          "line": 84
        },
        {
          "file": "include/lexer_internal.h",
          "line": 51
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_reset",
      "calls": [
        {
          "file": "include/lexer.h",
          "line": 90
        },
        {
          "file": "include/lexer_internal.h",
          "line": 52
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "loop_context_new",
      "calls": [
        {
          "file": "include/loop.h",
          "line": 52
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "loop_context_free",
      "calls": [
        {
          "file": "include/loop.h",
          "line": 58
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "for_loop_process",
      "calls": [
        {
          "file": "include/loop.h",
          "line": 70
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "while_loop_process",
      "calls": [
        {
          "file": "include/loop.h",
          "line": 83
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "loop_break",
      "calls": [
        {
          "file": "include/loop.h",
          "line": 91
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "loop_continue",
      "calls": [
        {
          "file": "include/loop.h",
          "line": 98
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "set_loop_error",
      "calls": [
        {
          "file": "include/loop.h",
          "line": 105
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "append_to_result",
      "calls": [
        {
          "file": "include/loop.h",
          "line": 113
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "module_new",
      "calls": [
        {
          "file": "include/module.h",
          "line": 62
        },
        {
          "file": "include/module_internal.h",
          "line": 18
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "module_free",
      "calls": [
        {
          "file": "include/module.h",
          "line": 68
        },
        {
          "file": "include/module_internal.h",
          "line": 19
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "module_load_content",
      "calls": [
        {
          "file": "include/module.h",
          "line": 75
        },
        {
          "file": "include/module_internal.h",
          "line": 20
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "module_add_dependency",
      "calls": [
        {
          "file": "include/module.h",
          "line": 83
        },
        {
          "file": "include/module_internal.h",
          "line": 21
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "module_export",
      "calls": [
        {
          "file": "include/module.h",
          "line": 92
        },
        {
          "file": "include/module_internal.h",
          "line": 22
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "module_get_export",
      "calls": [
        {
          "file": "include/module.h",
          "line": 100
        },
        {
          "file": "include/module_internal.h",
          "line": 23
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "module_registry_new",
      "calls": [
        {
          "file": "include/module.h",
          "line": 106
        },
        {
          "file": "include/module_internal.h",
          "line": 24
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "module_registry_free",
      "calls": [
        {
          "file": "include/module.h",
          "line": 112
        },
        {
          "file": "include/module_internal.h",
          "line": 25
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "module_registry_add_search_path",
      "calls": [
        {
          "file": "include/module.h",
          "line": 120
        },
        {
          "file": "include/module_internal.h",
          "line": 26
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "module_registry_register",
      "calls": [
        {
          "file": "include/module.h",
          "line": 128
        },
        {
          "file": "include/module_internal.h",
          "line": 27
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "module_registry_find",
      "calls": [
        {
          "file": "include/module.h",
          "line": 136
        },
        {
          "file": "include/module_internal.h",
          "line": 28
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "module_registry_load",
      "calls": [
        {
          "file": "include/module.h",
          "line": 144
        },
        {
          "file": "include/module_internal.h",
          "line": 29
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "module_resolve_path",
      "calls": [
        {
          "file": "include/module.h",
          "line": 153
        },
        {
          "file": "include/module_internal.h",
          "line": 31
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "JSON",
      "calls": [
        {
          "file": "include/output.h",
          "line": 25
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "output_formatter_new",
      "calls": [
        {
          "file": "include/output.h",
          "line": 54
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "output_formatter_free",
      "calls": [
        {
          "file": "include/output.h",
          "line": 60
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "output_format_text",
      "calls": [
        {
          "file": "include/output.h",
          "line": 70
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "output_escape_html",
      "calls": [
        {
          "file": "include/output.h",
          "line": 79
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "output_escape_json",
      "calls": [
        {
          "file": "include/output.h",
          "line": 87
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "language",
      "calls": [
        {
          "file": "include/output.h",
          "line": 92
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "output_format_as_code",
      "calls": [
        {
          "file": "include/output.h",
          "line": 96
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "output_strip_ansi_codes",
      "calls": [
        {
          "file": "include/output.h",
          "line": 104
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "output_truncate",
      "calls": [
        {
          "file": "include/output.h",
          "line": 113
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "set_formatter_error",
      "calls": [
        {
          "file": "include/output.h",
          "line": 120
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "perf_optimizer_init",
      "calls": [
        {
          "file": "include/performance.h",
          "line": 104
        },
        {
          "file": "include/optimizer_internal.h",
          "line": 40
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "perf_optimize_ast",
      "calls": [
        {
          "file": "include/performance.h",
          "line": 113
        },
        {
          "file": "include/optimizer_internal.h",
          "line": 41
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "perf_optimizer_cleanup",
      "calls": [
        {
          "file": "include/performance.h",
          "line": 118
        },
        {
          "file": "include/optimizer_internal.h",
          "line": 42
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "benchmark_suite_create",
      "calls": [
        {
          "file": "include/performance.h",
          "line": 199
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "resize_results_if_needed",
      "calls": [
        {
          "file": "include/performance.h",
          "line": 245
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "PERF_PROFILE_BLOCK",
      "calls": [
        {
          "file": "include/performance.h",
          "line": 262
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "PERF_RECORD_ALLOC",
      "calls": [
        {
          "file": "include/performance.h",
          "line": 272
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "PERF_RECORD_DEALLOC",
      "calls": [
        {
          "file": "include/performance.h",
          "line": 280
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "PERF_RECORD_CACHE_HIT",
      "calls": [
        {
          "file": "include/performance.h",
          "line": 288
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "PERF_RECORD_CACHE_MISS",
      "calls": [
        {
          "file": "include/performance.h",
          "line": 296
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "later",
      "calls": [
        {
          "file": "include/platform.h",
          "line": 7
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "Windows",
      "calls": [
        {
          "file": "include/platform.h",
          "line": 10
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "macOS",
      "calls": [
        {
          "file": "include/platform.h",
          "line": 11
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "Linux",
      "calls": [
        {
          "file": "include/platform.h",
          "line": 12
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "Android",
      "calls": [
        {
          "file": "include/platform.h",
          "line": 13
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "iOS",
      "calls": [
        {
          "file": "include/platform.h",
          "line": 14
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "XMD_INVALID_DIR",
      "calls": [
        {
          "file": "include/platform.h",
          "line": 142
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "__declspec",
      "calls": [
        {
          "file": "include/platform.h",
          "line": 217
        },
        {
          "file": "include/platform.h",
          "line": 218
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "__pragma",
      "calls": [
        {
          "file": "include/platform.h",
          "line": 219
        },
        {
          "file": "include/platform.h",
          "line": 220
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "pack",
      "calls": [
        {
          "file": "include/platform.h",
          "line": 219
        },
        {
          "file": "include/platform.h",
          "line": 220
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "XMD_ASSERT",
      "calls": [
        {
          "file": "include/platform.h",
          "line": 241
        },
        {
          "file": "include/platform.h",
          "line": 243
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "bytes",
      "calls": [
        {
          "file": "include/resource.h",
          "line": 23
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "resource_monitor_new",
      "calls": [
        {
          "file": "include/resource.h",
          "line": 116
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "sandbox_config_new",
      "calls": [
        {
          "file": "include/sandbox.h",
          "line": 56
        },
        {
          "file": "include/sandbox_internal.h",
          "line": 19
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "sandbox_config_free",
      "calls": [
        {
          "file": "include/sandbox.h",
          "line": 62
        },
        {
          "file": "include/sandbox_internal.h",
          "line": 20
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "sandbox_config_add_whitelist",
      "calls": [
        {
          "file": "include/sandbox.h",
          "line": 70
        },
        {
          "file": "include/sandbox_internal.h",
          "line": 21
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "sandbox_config_add_blacklist",
      "calls": [
        {
          "file": "include/sandbox.h",
          "line": 78
        },
        {
          "file": "include/sandbox_internal.h",
          "line": 22
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "sandbox_config_add_allowed_path",
      "calls": [
        {
          "file": "include/sandbox.h",
          "line": 86
        },
        {
          "file": "include/sandbox_internal.h",
          "line": 23
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "sandbox_context_new",
      "calls": [
        {
          "file": "include/sandbox.h",
          "line": 93
        },
        {
          "file": "include/sandbox_internal.h",
          "line": 24
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "sandbox_context_free",
      "calls": [
        {
          "file": "include/sandbox.h",
          "line": 99
        },
        {
          "file": "include/sandbox_internal.h",
          "line": 25
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "sandbox_check_command_allowed",
      "calls": [
        {
          "file": "include/sandbox.h",
          "line": 107
        },
        {
          "file": "include/sandbox_internal.h",
          "line": 26
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "sandbox_check_path_allowed",
      "calls": [
        {
          "file": "include/sandbox.h",
          "line": 115
        },
        {
          "file": "include/sandbox_internal.h",
          "line": 27
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "sandbox_apply_limits",
      "calls": [
        {
          "file": "include/sandbox.h",
          "line": 122
        },
        {
          "file": "include/sandbox_internal.h",
          "line": 28
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "extract_base_command",
      "calls": [
        {
          "file": "include/sandbox.h",
          "line": 129
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "check_command_injection",
      "calls": [
        {
          "file": "include/sandbox.h",
          "line": 136
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "normalize_path",
      "calls": [
        {
          "file": "include/sandbox.h",
          "line": 143
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "security_validate_input",
      "calls": [
        {
          "file": "include/security.h",
          "line": 63
        },
        {
          "file": "include/security.h",
          "line": 148
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "security_validate_path",
      "calls": [
        {
          "file": "include/security.h",
          "line": 78
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "entries",
      "calls": [
        {
          "file": "include/security.h",
          "line": 130
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "SECURITY_AUDIT",
      "calls": [
        {
          "file": "include/security.h",
          "line": 143
        },
        {
          "file": "include/security.h",
          "line": 149
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "SECURITY_VALIDATE_AND_AUDIT",
      "calls": [
        {
          "file": "include/security.h",
          "line": 146
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "destroy",
      "calls": [
        {
          "file": "include/store.h",
          "line": 31
        },
        {
          "file": "include/template.h",
          "line": 33
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "store",
      "calls": [
        {
          "file": "include/store.h",
          "line": 39
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "names",
      "calls": [
        {
          "file": "include/store.h",
          "line": 85
        },
        {
          "file": "include/template.h",
          "line": 49
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "template_context_create",
      "calls": [
        {
          "file": "include/template.h",
          "line": 29
        },
        {
          "file": "include/template_internal.h",
          "line": 32
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "template_context_destroy",
      "calls": [
        {
          "file": "include/template.h",
          "line": 35
        },
        {
          "file": "include/template_internal.h",
          "line": 33
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "template_process",
      "calls": [
        {
          "file": "include/template.h",
          "line": 43
        },
        {
          "file": "include/template_internal.h",
          "line": 34
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "template_extract_variables",
      "calls": [
        {
          "file": "include/template.h",
          "line": 51
        },
        {
          "file": "include/template_internal.h",
          "line": 35
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "template_has_variables",
      "calls": [
        {
          "file": "include/template.h",
          "line": 58
        },
        {
          "file": "include/template_internal.h",
          "line": 36
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "template_validate",
      "calls": [
        {
          "file": "include/template.h",
          "line": 65
        },
        {
          "file": "include/template_internal.h",
          "line": 37
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "heading",
      "calls": [
        {
          "file": "include/token.h",
          "line": 22
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "comment",
      "calls": [
        {
          "file": "include/token.h",
          "line": 25
        },
        {
          "file": "include/platform_internal.h",
          "line": 32
        },
        {
          "file": "include/platform_internal.h",
          "line": 33
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "reference",
      "calls": [
        {
          "file": "include/token.h",
          "line": 27
        },
        {
          "file": "include/variable.h",
          "line": 212
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "Identifiers",
      "calls": [
        {
          "file": "include/token.h",
          "line": 30
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "literals",
      "calls": [
        {
          "file": "include/token.h",
          "line": 33
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "Operators",
      "calls": [
        {
          "file": "include/token.h",
          "line": 34
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "parenthesis",
      "calls": [
        {
          "file": "include/token.h",
          "line": 35
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "Whitespace",
      "calls": [
        {
          "file": "include/token.h",
          "line": 69
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "Comments",
      "calls": [
        {
          "file": "include/token.h",
          "line": 70
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "number",
      "calls": [
        {
          "file": "include/token.h",
          "line": 85
        },
        {
          "file": "include/token.h",
          "line": 86
        },
        {
          "file": "include/utils.h",
          "line": 23
        },
        {
          "file": "include/lexer_internal.h",
          "line": 26
        },
        {
          "file": "include/lexer_internal.h",
          "line": 27
        },
        {
          "file": "include/ast.h",
          "line": 24
        },
        {
          "file": "include/ast.h",
          "line": 25
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "token",
      "calls": [
        {
          "file": "include/token.h",
          "line": 117
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "Index",
      "calls": [
        {
          "file": "include/token.h",
          "line": 171
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "table",
      "calls": [
        {
          "file": "include/utils.h",
          "line": 17
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_variable_to_number",
      "calls": [
        {
          "file": "include/utils.h",
          "line": 27
        },
        {
          "file": "include/utils_internal.h",
          "line": 20
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_variable_equals",
      "calls": [
        {
          "file": "include/utils.h",
          "line": 35
        },
        {
          "file": "include/utils_internal.h",
          "line": 21
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "memory_allocate",
      "calls": [
        {
          "file": "include/utils.h",
          "line": 49
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_malloc_safe",
      "calls": [
        {
          "file": "include/utils.h",
          "line": 119
        },
        {
          "file": "include/utils_internal.h",
          "line": 28
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "XMD_NULL_CHECK_RETURN",
      "calls": [
        {
          "file": "include/utils.h",
          "line": 124
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "XMD_NULL_CHECK_GOTO",
      "calls": [
        {
          "file": "include/utils.h",
          "line": 130
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "XMD_MALLOC_CHECK",
      "calls": [
        {
          "file": "include/utils.h",
          "line": 136
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "sequences",
      "calls": [
        {
          "file": "include/utils.h",
          "line": 145
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "process_escape_sequences",
      "calls": [
        {
          "file": "include/utils.h",
          "line": 147
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "add",
      "calls": [
        {
          "file": "include/variable.h",
          "line": 131
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "set",
      "calls": [
        {
          "file": "include/variable.h",
          "line": 148
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "unreference",
      "calls": [
        {
          "file": "include/variable.h",
          "line": 219
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "representation",
      "calls": [
        {
          "file": "include/variable.h",
          "line": 247
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "variable_new_null",
      "calls": [
        {
          "file": "include/variable.h",
          "line": 306
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "variable_new_boolean",
      "calls": [
        {
          "file": "include/variable.h",
          "line": 307
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "variable_new_number",
      "calls": [
        {
          "file": "include/variable.h",
          "line": 308
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "variable_new_string",
      "calls": [
        {
          "file": "include/variable.h",
          "line": 309
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "variable_new_object",
      "calls": [
        {
          "file": "include/variable.h",
          "line": 310
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "XMD",
      "calls": [
        {
          "file": "include/xmd.h",
          "line": 3
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "code",
      "calls": [
        {
          "file": "include/xmd.h",
          "line": 54
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "commands",
      "calls": [
        {
          "file": "include/xmd.h",
          "line": 67
        },
        {
          "file": "include/xmd.h",
          "line": 68
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_config_new",
      "calls": [
        {
          "file": "include/xmd.h",
          "line": 134
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_validate_syntax",
      "calls": [
        {
          "file": "include/xmd.h",
          "line": 215
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_error_string",
      "calls": [
        {
          "file": "include/xmd.h",
          "line": 230
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "library",
      "calls": [
        {
          "file": "include/xmd.h",
          "line": 233
        },
        {
          "file": "include/xmd.h",
          "line": 239
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_cleanup",
      "calls": [
        {
          "file": "include/xmd.h",
          "line": 241
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "tutorial_generate",
      "calls": [
        {
          "file": "include/xmd.h",
          "line": 253
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "examples_generate",
      "calls": [
        {
          "file": "include/xmd.h",
          "line": 261
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "reference_generate",
      "calls": [
        {
          "file": "include/xmd.h",
          "line": 269
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "debugger_trace",
      "calls": [
        {
          "file": "include/xmd.h",
          "line": 277
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "linter_check",
      "calls": [
        {
          "file": "include/xmd.h",
          "line": 284
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "formatter_format",
      "calls": [
        {
          "file": "include/xmd.h",
          "line": 292
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cleanup_cmd_variables",
      "calls": [
        {
          "file": "include/main_internal.h",
          "line": 41
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "format_output",
      "calls": [
        {
          "file": "include/main_internal.h",
          "line": 42
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cmd_process",
      "calls": [
        {
          "file": "include/main_internal.h",
          "line": 43
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cmd_validate",
      "calls": [
        {
          "file": "include/main_internal.h",
          "line": 44
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cmd_watch",
      "calls": [
        {
          "file": "include/main_internal.h",
          "line": 45
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cmd_upgrade",
      "calls": [
        {
          "file": "include/main_internal.h",
          "line": 46
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cmd_uninstall",
      "calls": [
        {
          "file": "include/main_internal.h",
          "line": 47
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "looks_like_file_path",
      "calls": [
        {
          "file": "include/main_internal.h",
          "line": 48
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "convert_shorthand_to_process",
      "calls": [
        {
          "file": "include/main_internal.h",
          "line": 49
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cmd_process_parse_args",
      "calls": [
        {
          "file": "include/main_internal.h",
          "line": 54
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cmd_process_create_config",
      "calls": [
        {
          "file": "include/main_internal.h",
          "line": 56
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cmd_process_setup_processor",
      "calls": [
        {
          "file": "include/main_internal.h",
          "line": 57
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cmd_process_handle_input",
      "calls": [
        {
          "file": "include/main_internal.h",
          "line": 60
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "cmd_process_format_output",
      "calls": [
        {
          "file": "include/main_internal.h",
          "line": 62
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "create_context",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 56
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "destroy_context",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 57
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "set_context_source_file",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 58
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "should_execute_block",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 59
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "execute_command",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 62
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "execute_command_dynamic",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 63
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "trim_whitespace",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 66
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "substitute_variables",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 67
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "backup_variable_scope",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 68
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "restore_variable_scope",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 69
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "process_loop_body",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 70
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "process_exec",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 73
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "process_exec_dynamic",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 74
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "process_set",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 75
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "process_if",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 76
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "process_elif",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 77
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "process_else",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 78
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "process_endif",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 79
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "process_import",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 80
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "process_for",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 81
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "parse_array_literal",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 84
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "get_version",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 88
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "get_version_detailed",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 89
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "functions",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 91
        },
        {
          "file": "include/xmd_processor_internal.h",
          "line": 95
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_set_global_import_tracker",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 96
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_get_global_import_tracker",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 97
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_is_watch_mode",
      "calls": [
        {
          "file": "include/xmd_processor_internal.h",
          "line": 98
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "process_xmd_directive",
      "calls": [
        {
          "file": "include/c_api_internal.h",
          "line": 22
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "process_text_with_directives",
      "calls": [
        {
          "file": "include/c_api_internal.h",
          "line": 23
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "process_complete_for_loop",
      "calls": [
        {
          "file": "include/c_api_internal.h",
          "line": 24
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "process_complete_if_statement",
      "calls": [
        {
          "file": "include/c_api_internal.h",
          "line": 26
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "c_api_evaluate_condition",
      "calls": [
        {
          "file": "include/c_api_internal.h",
          "line": 39
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "create_result",
      "calls": [
        {
          "file": "include/c_api_internal.h",
          "line": 42
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "c_api_xmd_process_string",
      "calls": [
        {
          "file": "include/c_api_internal.h",
          "line": 43
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "c_api_xmd_process_string_api",
      "calls": [
        {
          "file": "include/c_api_internal.h",
          "line": 44
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "c_api_xmd_process_file",
      "calls": [
        {
          "file": "include/c_api_internal.h",
          "line": 46
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "c_api_xmd_validate",
      "calls": [
        {
          "file": "include/c_api_internal.h",
          "line": 47
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "c_api_xmd_set_config",
      "calls": [
        {
          "file": "include/c_api_internal.h",
          "line": 48
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "c_api_xmd_get_config",
      "calls": [
        {
          "file": "include/c_api_internal.h",
          "line": 49
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "c_api_xmd_result_free",
      "calls": [
        {
          "file": "include/c_api_internal.h",
          "line": 50
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "c_api_xmd_get_version",
      "calls": [
        {
          "file": "include/c_api_internal.h",
          "line": 52
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "c_api_xmd_set_variable",
      "calls": [
        {
          "file": "include/c_api_internal.h",
          "line": 53
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "c_api_xmd_get_variable",
      "calls": [
        {
          "file": "include/c_api_internal.h",
          "line": 54
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "instance",
      "calls": [
        {
          "file": "include/config_internal.h",
          "line": 18
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "parse_env_size_t",
      "calls": [
        {
          "file": "include/config_internal.h",
          "line": 34
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "parse_env_double",
      "calls": [
        {
          "file": "include/config_internal.h",
          "line": 35
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "parse_env_bool",
      "calls": [
        {
          "file": "include/config_internal.h",
          "line": 36
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_current_char",
      "calls": [
        {
          "file": "include/lexer_internal.h",
          "line": 34
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_advance",
      "calls": [
        {
          "file": "include/lexer_internal.h",
          "line": 35
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_peek_char",
      "calls": [
        {
          "file": "include/lexer_internal.h",
          "line": 36
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_skip_whitespace",
      "calls": [
        {
          "file": "include/lexer_internal.h",
          "line": 37
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_starts_with",
      "calls": [
        {
          "file": "include/lexer_internal.h",
          "line": 38
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_extract_substring",
      "calls": [
        {
          "file": "include/lexer_internal.h",
          "line": 39
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_read_line",
      "calls": [
        {
          "file": "include/lexer_internal.h",
          "line": 40
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_read_html_comment",
      "calls": [
        {
          "file": "include/lexer_internal.h",
          "line": 41
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_read_code_block",
      "calls": [
        {
          "file": "include/lexer_internal.h",
          "line": 42
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_read_variable_ref",
      "calls": [
        {
          "file": "include/lexer_internal.h",
          "line": 43
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_read_xmd_directive",
      "calls": [
        {
          "file": "include/lexer_internal.h",
          "line": 44
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_read_text",
      "calls": [
        {
          "file": "include/lexer_internal.h",
          "line": 45
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "store_entry_create",
      "calls": [
        {
          "file": "include/store_internal.h",
          "line": 42
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "store_entry_destroy",
      "calls": [
        {
          "file": "include/store_internal.h",
          "line": 43
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "store_resize",
      "calls": [
        {
          "file": "include/store_internal.h",
          "line": 44
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "file_exists",
      "calls": [
        {
          "file": "include/module_internal.h",
          "line": 30
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "time_diff_ns",
      "calls": [
        {
          "file": "include/profiler_internal.h",
          "line": 19
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "extract_command_name",
      "calls": [
        {
          "file": "include/sandbox_internal.h",
          "line": 16
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "set_executor_error",
      "calls": [
        {
          "file": "include/executor_internal.h",
          "line": 23
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "get_time_ms",
      "calls": [
        {
          "file": "include/executor_internal.h",
          "line": 24
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "read_with_timeout",
      "calls": [
        {
          "file": "include/executor_internal.h",
          "line": 25
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "read_with_timeout_dynamic",
      "calls": [
        {
          "file": "include/executor_internal.h",
          "line": 26
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "parse_command_args",
      "calls": [
        {
          "file": "include/executor_internal.h",
          "line": 27
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "should_apply_optimization",
      "calls": [
        {
          "file": "include/optimizer_internal.h",
          "line": 32
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "apply_constant_folding",
      "calls": [
        {
          "file": "include/optimizer_internal.h",
          "line": 33
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "apply_dead_code_elimination",
      "calls": [
        {
          "file": "include/optimizer_internal.h",
          "line": 34
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "apply_common_subexpression_elimination",
      "calls": [
        {
          "file": "include/optimizer_internal.h",
          "line": 35
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "apply_loop_unrolling",
      "calls": [
        {
          "file": "include/optimizer_internal.h",
          "line": 36
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "apply_inline_expansion",
      "calls": [
        {
          "file": "include/optimizer_internal.h",
          "line": 37
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "find_next_variable",
      "calls": [
        {
          "file": "include/template_internal.h",
          "line": 27
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "extract_variable_name",
      "calls": [
        {
          "file": "include/template_internal.h",
          "line": 29
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "get_timestamp_ms",
      "calls": [
        {
          "file": "include/auditor_internal.h",
          "line": 37
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "expand_entries_array",
      "calls": [
        {
          "file": "include/auditor_internal.h",
          "line": 38
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "write_audit_entry_to_file",
      "calls": [
        {
          "file": "include/auditor_internal.h",
          "line": 39
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "prototypes",
      "calls": [
        {
          "file": "include/limiter_internal.h",
          "line": 19
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "operations",
      "calls": [
        {
          "file": "include/ast.h",
          "line": 37
        },
        {
          "file": "include/ast.h",
          "line": 38
        },
        {
          "file": "include/ast.h",
          "line": 296
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "Conditional",
      "calls": [
        {
          "file": "include/ast.h",
          "line": 236
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "Loop",
      "calls": [
        {
          "file": "include/ast.h",
          "line": 243
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "Block",
      "calls": [
        {
          "file": "include/ast.h",
          "line": 250
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "ast_parse_multiple_variables_handler",
      "calls": [
        {
          "file": "include/ast.h",
          "line": 371
        },
        {
          "file": "include/ast_parser.h",
          "line": 78
        },
        {
          "file": "include/misc.h",
          "line": 38
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "parse_command_type",
      "calls": [
        {
          "file": "include/parser_internal.h",
          "line": 17
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "is_flag",
      "calls": [
        {
          "file": "include/parser_internal.h",
          "line": 18
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "ast_find_matching_endfor",
      "calls": [
        {
          "file": "include/ast_find_matching_endfor.h",
          "line": 16
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "ast_clone",
      "calls": [
        {
          "file": "include/ast_node.h",
          "line": 7
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "ast_print",
      "calls": [
        {
          "file": "include/ast_node.h",
          "line": 8
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "ast_node_type_to_string",
      "calls": [
        {
          "file": "include/ast_node.h",
          "line": 11
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "binary_operator_to_string",
      "calls": [
        {
          "file": "include/ast_node.h",
          "line": 12
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "unary_operator_to_string",
      "calls": [
        {
          "file": "include/ast_node.h",
          "line": 13
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "string_to_binary_operator",
      "calls": [
        {
          "file": "include/ast_node.h",
          "line": 14
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "ast_process_directive_content",
      "calls": [
        {
          "file": "include/ast_process_directive_content.h",
          "line": 22
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "import_tracker_create",
      "calls": [
        {
          "file": "include/import_tracker.h",
          "line": 38
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "import_tracker_free",
      "calls": [
        {
          "file": "include/import_tracker.h",
          "line": 44
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "import_tracker_add_dependency",
      "calls": [
        {
          "file": "include/import_tracker.h",
          "line": 53
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "import_tracker_clear",
      "calls": [
        {
          "file": "include/import_tracker.h",
          "line": 61
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "files",
      "calls": [
        {
          "file": "include/import_tracker.h",
          "line": 67
        },
        {
          "file": "include/import_tracker.h",
          "line": 80
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "import_tracker_get_importers",
      "calls": [
        {
          "file": "include/import_tracker.h",
          "line": 71
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "import_tracker_extract_imports",
      "calls": [
        {
          "file": "include/import_tracker.h",
          "line": 84
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "lexer_enhanced_tokenize",
      "calls": [
        {
          "file": "include/lexer_enhanced.h",
          "line": 19
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "is_identifier_start",
      "calls": [
        {
          "file": "include/lexer_enhanced.h",
          "line": 26
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "is_identifier_continue",
      "calls": [
        {
          "file": "include/lexer_enhanced.h",
          "line": 33
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "is_digit",
      "calls": [
        {
          "file": "include/lexer_enhanced.h",
          "line": 40
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "is_whitespace",
      "calls": [
        {
          "file": "include/lexer_enhanced.h",
          "line": 47
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "is_boolean_literal",
      "calls": [
        {
          "file": "include/lexer_enhanced.h",
          "line": 54
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "get_operator",
      "calls": [
        {
          "file": "include/lexer_enhanced.h",
          "line": 62
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "Configuration",
      "calls": [
        {
          "file": "include/processor_internal.h",
          "line": 16
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "docs_create_default_config",
      "calls": [
        {
          "file": "include/docs.h",
          "line": 26
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "docs_free_config",
      "calls": [
        {
          "file": "include/docs.h",
          "line": 27
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "docs_generate_all",
      "calls": [
        {
          "file": "include/docs.h",
          "line": 28
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_error_new",
      "calls": [
        {
          "file": "include/error_internal.h",
          "line": 50
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "xmd_error_free",
      "calls": [
        {
          "file": "include/error_internal.h",
          "line": 55
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "results",
      "calls": [
        {
          "file": "include/flow_internal.h",
          "line": 18
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "API",
      "calls": [
        {
          "file": "include/devtools.h",
          "line": 13
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "ast_parse_conditional_simple",
      "calls": [
        {
          "file": "include/misc.h",
          "line": 37
        }
      ],
      "reason": "Called but not defined"
    },
    {
      "name": "ast_parse_print_simple",
      "calls": [
        {
          "file": "include/misc.h",
          "line": 41
        }
      ],
      "reason": "Called but not defined"
    }
  ],
  "duplicate_functions": [
    {
      "pattern": "void_args",
      "functions": [
        [
          "print_version",
          {
            "file": "src/main.c",
            "line": 13,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "get_version(void);\n\nvoid print_version(void) {\n    printf(\"XMD v%s"
          }
        ],
        [
          "print_usage",
          {
            "file": "src/main.c",
            "line": 20,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "icense: MIT\\n\");\n}\n\nvoid print_usage(const char* program_name) {\n    printf(\"Usage: "
          }
        ],
        [
          "parser_state_free",
          {
            "file": "src/parser/state/parser_state_free/parser_state_free.c",
            "line": 16,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "r state to free\n */\nvoid parser_state_free(parser_state* state) {\n    if (!state) ret"
          }
        ],
        [
          "parser_set_error",
          {
            "file": "src/parser/error/parser_set_error/parser_set_error.c",
            "line": 20,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "ormat arguments\n */\nvoid parser_set_error(parser_state* state, const char* message, ...) {\n    if (!state || !"
          }
        ],
        [
          "dependency_detector_free",
          {
            "file": "src/dependency/detection/dependency_detector_free/dependency_detector_free.c",
            "line": 20,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "etector to free\n */\nvoid dependency_detector_free(DependencyDetector* detector) {\n    if (!detector) "
          }
        ],
        [
          "dependency_graph_free",
          {
            "file": "src/dependency/graph/dependency_graph_free/dependency_graph_free.c",
            "line": 20,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "h Graph to free\n */\nvoid dependency_graph_free(DependencyGraph* graph) {\n    if (!graph) {\n "
          }
        ],
        [
          "reset_visit_states",
          {
            "file": "src/dependency/utilities/reset_visit_states/reset_visit_states.c",
            "line": 16,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "ependency graph\n */\nvoid reset_visit_states(DependencyGraph* graph) {\n    if (!graph) {\n "
          }
        ],
        [
          "dependency_node_free",
          {
            "file": "src/dependency/graph/dependency_node_free/dependency_node_free.c",
            "line": 17,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "de Node to free\n */\nvoid dependency_node_free(DependencyNode* node) {\n    if (!node) {\n  "
          }
        ],
        [
          "init_global_functions",
          {
            "file": "src/ast/functions/global_functions.c",
            "line": 18,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "functions store\n */\nvoid init_global_functions(void) {\n    if (!global_fun"
          }
        ],
        [
          "cleanup_global_functions",
          {
            "file": "src/ast/functions/global_functions.c",
            "line": 27,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "functions store\n */\nvoid cleanup_global_functions(void) {\n    if (global_func"
          }
        ],
        [
          "debug_interpolate_loaded",
          {
            "file": "src/ast/substitution/ast_interpolate_string.c",
            "line": 18,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "te__((constructor))\nvoid debug_interpolate_loaded() {\n    printf(\"DEBUG: "
          }
        ],
        [
          "ast_value_free",
          {
            "file": "src/ast/value/ast_value_free/ast_value_free.c",
            "line": 14,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "\n#include \"utils.h\"\nvoid ast_value_free(ast_value* val) {\n    if (!val) retur"
          }
        ],
        [
          "ast_evaluator_free",
          {
            "file": "src/ast/evaluator/ast_evaluator_free/ast_evaluator_free.c",
            "line": 20,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "aluator to free\n */\nvoid ast_evaluator_free(ast_evaluator* evaluator) {\n    if (!evaluator)"
          }
        ],
        [
          "ast_free",
          {
            "file": "src/ast/node/free/ast_free.c",
            "line": 17,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "e (can be NULL)\n */\nvoid ast_free(ast_node* node) {\n    if (!node) {\n  "
          }
        ],
        [
          "ast_functions_init",
          {
            "file": "src/ast/functions/ast_functions_init/ast_functions_init.c",
            "line": 17,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "functions store\n */\nvoid ast_functions_init(void) {\n    if (!global_fun"
          }
        ],
        [
          "ast_functions_cleanup",
          {
            "file": "src/ast/functions/ast_functions_cleanup/ast_functions_cleanup.c",
            "line": 15,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "functions store\n */\nvoid ast_functions_cleanup(void) {\n    if (global_func"
          }
        ],
        [
          "config_destroy",
          {
            "file": "src/config/create/config_destroy/config_destroy.c",
            "line": 18,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "uration to free\n */\nvoid config_destroy(xmd_config* config) {\n    if (!config) re"
          }
        ],
        [
          "config_set_global",
          {
            "file": "src/config/validate/config_set_global/config_set_global.c",
            "line": 19,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "as global\n  * /\n */\nvoid config_set_global(xmd_config* config) {\n    g_config = (xmd"
          }
        ],
        [
          "condition_context_free",
          {
            "file": "src/conditional/condition_context_free/condition_context_free.c",
            "line": 17,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "t to free\n  * /\n */\nvoid condition_context_free(ConditionContext* ctx) {\n    if (ctx) {\n    "
          }
        ],
        [
          "token_free",
          {
            "file": "src/token/memory/token_free.c",
            "line": 17,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "e (can be NULL)\n */\nvoid token_free(token* tok) {\n    if (tok == NULL"
          }
        ],
        [
          "token_list_destroy",
          {
            "file": "src/token/list/token_list_destroy/token_list_destroy.c",
            "line": 18,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "Token list head\n */\nvoid token_list_destroy(token* list) {\n    token_list_free"
          }
        ],
        [
          "token_list_free",
          {
            "file": "src/token/list/token_list_free/token_list_free.c",
            "line": 18,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "Token list head\n */\nvoid token_list_free(token* list) {\n    token* current "
          }
        ],
        [
          "variable_unref",
          {
            "file": "src/variable/memory/variable_unref/variable_unref.c",
            "line": 18,
            "return_type": "void",
            "is_static": false,
            "content_snippet": " to unreference\n */\nvoid variable_unref(variable* var) {\n    if (var == NULL"
          }
        ],
        [
          "variable_array_free",
          {
            "file": "src/variable/array/variable_array_free/variable_array_free.c",
            "line": 19,
            "return_type": "void",
            "is_static": false,
            "content_snippet": " Array variable\n */\nvoid variable_array_free(variable* array_var) {\n    if (!array_var "
          }
        ],
        [
          "variable_object_free",
          {
            "file": "src/variable/object/variable_object_free/variable_object_free.c",
            "line": 20,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "Object variable\n */\nvoid variable_object_free(variable* object_var) {\n    if (!object_var"
          }
        ],
        [
          "store_destroy",
          {
            "file": "src/store/memory/store_destroy.c",
            "line": 20,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "tore to destroy\n */\nvoid store_destroy(store* s) {\n    if (!s) {\n     "
          }
        ],
        [
          "store_clear",
          {
            "file": "src/store/operations/store_clear/store_clear.c",
            "line": 19,
            "return_type": "void",
            "is_static": false,
            "content_snippet": " Store to clear\n */\nvoid store_clear(store* s) {\n    if (!s) {\n     "
          }
        ],
        [
          "perf_profiler_record_cache_hit",
          {
            "file": "src/performance/profiler/perf_profiler_record_cache_hit/perf_profiler_record_cache_hit.c",
            "line": 7,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "ormance_internal.h\"\nvoid perf_profiler_record_cache_hit(perf_profiler* profiler) {\n    if (!profiler) "
          }
        ],
        [
          "perf_profiler_destroy",
          {
            "file": "src/performance/profiler/perf_profiler_destroy/perf_profiler_destroy.c",
            "line": 8,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "ormance_internal.h\"\nvoid perf_profiler_destroy(perf_profiler* profiler) {\n    if (!profiler) "
          }
        ],
        [
          "perf_profiler_record_alloc",
          {
            "file": "src/performance/profiler/perf_profiler_record_alloc/perf_profiler_record_alloc.c",
            "line": 14,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "e of allocation\n */\nvoid perf_profiler_record_alloc(perf_profiler* profiler, size_t size) {\n    if (!profiler) "
          }
        ],
        [
          "perf_profiler_record_cache_miss",
          {
            "file": "src/performance/profiler/perf_profiler_record_cache_miss/perf_profiler_record_cache_miss.c",
            "line": 7,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "ormance_internal.h\"\nvoid perf_profiler_record_cache_miss(perf_profiler* profiler) {\n    if (!profiler) "
          }
        ],
        [
          "perf_profiler_record_dealloc",
          {
            "file": "src/performance/profiler/perf_profiler_record_dealloc/perf_profiler_record_dealloc.c",
            "line": 12,
            "return_type": "void",
            "is_static": false,
            "content_snippet": " implementation\n */\nvoid perf_profiler_record_dealloc(perf_profiler* profiler, size_t size) {\n    if (!profiler) "
          }
        ],
        [
          "calculate_stats",
          {
            "file": "src/performance/metrics/calculate_stats/calculate_stats.c",
            "line": 14,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "ult to populate\n */\nvoid calculate_stats(uint64_t* times, uint32_t count, benchmark_result* result) {\n    if (!times || !"
          }
        ],
        [
          "benchmark_suite_destroy",
          {
            "file": "src/performance/benchmark/benchmark_suite_destroy/benchmark_suite_destroy.c",
            "line": 8,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "ormance_internal.h\"\nvoid benchmark_suite_destroy(benchmark_suite* suite) {\n    if (!suite) {\n "
          }
        ],
        [
          "xmd_aligned_free",
          {
            "file": "src/platform/memory/xmd_aligned_free/xmd_aligned_free.c",
            "line": 12,
            "return_type": "void",
            "is_static": false,
            "content_snippet": " Memory to free\n */\nvoid xmd_aligned_free(void* ptr) {\n    if (!ptr) retur"
          }
        ],
        [
          "xmd_closedir",
          {
            "file": "src/platform/directory/xmd_closedir/xmd_closedir.c",
            "line": 12,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "handle to close\n */\nvoid xmd_closedir(xmd_dir_t dir) {\n    if (dir == XMD_"
          }
        ],
        [
          "xmd_process_close",
          {
            "file": "src/platform/process/xmd_process_close/xmd_process_close.c",
            "line": 12,
            "return_type": "void",
            "is_static": false,
            "content_snippet": " Process handle\n */\nvoid xmd_process_close(xmd_process_t process) {\n#ifdef XMD_PLATFORM"
          }
        ],
        [
          "security_audit_cleanup",
          {
            "file": "src/security/audit/security_audit_cleanup/security_audit_cleanup.c",
            "line": 18,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "ty audit system\n */\nvoid security_audit_cleanup(void) {\n    if (!audit_stat"
          }
        ],
        [
          "security_sandbox_cleanup",
          {
            "file": "src/security/sandbox/security_sandbox_cleanup/security_sandbox_cleanup.c",
            "line": 16,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "ecurity sandbox\n */\nvoid security_sandbox_cleanup(void) {\n    security_audit_"
          }
        ],
        [
          "set_limiter_error",
          {
            "file": "src/resource/utils/set_limiter_error/set_limiter_error.c",
            "line": 9,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "../include/utils.h\"\nvoid set_limiter_error(ResourceLimiter* limiter, const char* error) {\n    if (!limiter ||"
          }
        ],
        [
          "resource_limiter_free",
          {
            "file": "src/resource/limiter/resource_limiter_free/resource_limiter_free.c",
            "line": 8,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "include/resource.h\"\nvoid resource_limiter_free(ResourceLimiter* limiter) {\n    if (!limiter) {"
          }
        ],
        [
          "resource_monitor_free",
          {
            "file": "src/resource/monitor/resource_monitor_free/resource_monitor_free.c",
            "line": 8,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "include/resource.h\"\nvoid resource_monitor_free(ResourceMonitor* monitor) {\n    if (!monitor) r"
          }
        ],
        [
          "set_monitor_error",
          {
            "file": "src/resource/utils/set_monitor_error/set_monitor_error.c",
            "line": 9,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "../include/utils.h\"\nvoid set_monitor_error(ResourceMonitor* monitor, const char* message) {\n    if (!monitor ||"
          }
        ],
        [
          "c_api_xmd_cleanup",
          {
            "file": "src/bindings/c_api/initialization/c_api_xmd_cleanup/c_api_xmd_cleanup.c",
            "line": 20,
            "return_type": "void",
            "is_static": false,
            "content_snippet": " clean up\n  * /\n */\nvoid c_api_xmd_cleanup(void* handle) {\n    if (!handle) re"
          }
        ],
        [
          "xmd_config_free",
          {
            "file": "src/bindings/c_api/configuration/xmd_config_free/xmd_config_free.c",
            "line": 17,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "n to free\n  * /\n */\nvoid xmd_config_free(xmd_config* config) {\n    if (!config) re"
          }
        ],
        [
          "xmd_processor_free",
          {
            "file": "src/bindings/c_api/processor/xmd_processor_free/xmd_processor_free.c",
            "line": 19,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "r to free\n  * /\n */\nvoid xmd_processor_free(xmd_processor* processor) {\n    if (!processor)"
          }
        ],
        [
          "xmd_result_free",
          {
            "file": "src/bindings/c_api/results/xmd_result_free/xmd_result_free.c",
            "line": 17,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "t to free\n  * /\n */\nvoid xmd_result_free(xmd_result* result) {\n    if (!result) re"
          }
        ],
        [
          "memory_free_safe",
          {
            "file": "src/utils/memory/memory_free_safe/memory_free_safe.c",
            "line": 16,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "pointer to free\n */\nvoid memory_free_safe(void** ptr) {\n    if (ptr && *ptr"
          }
        ],
        [
          "xmd_free",
          {
            "file": "src/utils/memory/xmd_free/xmd_free.c",
            "line": 16,
            "return_type": "void",
            "is_static": false,
            "content_snippet": "Pointer to free\n */\nvoid xmd_free(void* ptr) {\n    if (ptr) {\n    "
          }
        ]
      ],
      "count": 49
    },
    {
      "pattern": "int_args",
      "functions": [
        [
          "cmd_process_simple",
          {
            "file": "src/main.c",
            "line": 28,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "elp message\\n\");\n}\n\nint cmd_process_simple(const char* filename) {\n    printf(\"DEBUG: "
          }
        ],
        [
          "dependency_check_circular",
          {
            "file": "src/dependency/detection/dependency_check_circular/dependency_check_circular.c",
            "line": 21,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "se, -1 on error\n */\nint dependency_check_circular(DependencyDetector* detector) {\n    if (!detector |"
          }
        ],
        [
          "dependency_graph_topological_sort",
          {
            "file": "src/dependency/graph/dependency_graph_topological_sort/dependency_graph_topological_sort.c",
            "line": 21,
            "return_type": "int",
            "is_static": false,
            "content_snippet": " cycle detected\n */\nint dependency_graph_topological_sort(DependencyGraph* graph) {\n    if (!graph) {\n "
          }
        ],
        [
          "dependency_validate_all",
          {
            "file": "src/dependency/validation/dependency_validate_all.c",
            "line": 26,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "id dependencies\n */\nint dependency_validate_all(ModuleRegistry* registry) {\n    if (!registry) "
          }
        ],
        [
          "dependency_check_circular_from",
          {
            "file": "src/dependency/detection/dependency_check_circular_from/dependency_check_circular_from.c",
            "line": 21,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "le, -1 on error\n */\nint dependency_check_circular_from(DependencyDetector* detector, const char* module_name) {\n    if (!detector |"
          }
        ],
        [
          "dependency_graph_add_dependency",
          {
            "file": "src/dependency/graph/dependency_graph_add_dependency/dependency_graph_add_dependency.c",
            "line": 19,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint dependency_graph_add_dependency(DependencyGraph* graph, const char* parent_name, const char* child_name) {\n    if (!graph || !"
          }
        ],
        [
          "dependency_graph_add_module",
          {
            "file": "src/dependency/graph/dependency_graph_add_module/dependency_graph_add_module.c",
            "line": 19,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint dependency_graph_add_module(DependencyGraph* graph, Module* module) {\n    if (!graph || !"
          }
        ],
        [
          "dependency_node_add_child",
          {
            "file": "src/dependency/graph/dependency_node_add_child/dependency_node_add_child.c",
            "line": 19,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint dependency_node_add_child(DependencyNode* parent, DependencyNode* child) {\n    if (!parent || "
          }
        ],
        [
          "calculate_in_degrees",
          {
            "file": "src/dependency/utilities/calculate_in_degrees/calculate_in_degrees.c",
            "line": 18,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint calculate_in_degrees(DependencyGraph* graph, int* in_degrees) {\n    if (!graph || !"
          }
        ],
        [
          "ast_value_array_add",
          {
            "file": "src/ast/value/misc/ast_value_array_add.c",
            "line": 12,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "../include/utils.h\"\nint ast_value_array_add(ast_value* array, ast_value* element) {\n    if (!array || a"
          }
        ],
        [
          "ast_evaluate_assignment",
          {
            "file": "src/ast/evaluator/assignment/ast_evaluate_assignment.c",
            "line": 25,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "d value or NULL\n */\nint ast_evaluate_assignment(ast_node* node, ast_evaluator* evaluator) {\n    XMD_VALIDATE_PT"
          }
        ],
        [
          "ast_evaluator_append_output",
          {
            "file": "src/ast/evaluator/function/ast_evaluate_function_call/ast_evaluate_function_call.c",
            "line": 24,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "put append function\nint ast_evaluator_append_output(ast_evaluator* evaluator, const char* text);\n// Forward declarat"
          }
        ],
        [
          "ast_add_element",
          {
            "file": "src/ast/node/util/ast_add_element/ast_add_element.c",
            "line": 18,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint ast_add_element(ast_node* array, ast_node* element) {\n    if (!array || !"
          }
        ],
        [
          "ast_add_method",
          {
            "file": "src/ast/node/util/ast_add_method/ast_add_method.c",
            "line": 21,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint ast_add_method(ast_node* class_def, ast_node* method) {\n    if (!class_def "
          }
        ],
        [
          "ast_add_parameter",
          {
            "file": "src/ast/node/util/ast_add_parameter/ast_add_parameter.c",
            "line": 20,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint ast_add_parameter(ast_node* function, const char* parameter) {\n    if (!function |"
          }
        ],
        [
          "ast_add_statement",
          {
            "file": "src/ast/node/util/ast_add_statement/ast_add_statement.c",
            "line": 18,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint ast_add_statement(ast_node* block, ast_node* statement) {\n    if (!block || !"
          }
        ],
        [
          "ast_add_argument",
          {
            "file": "src/ast/node/util/ast_add_argument/ast_add_argument.c",
            "line": 18,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint ast_add_argument(ast_node* node, ast_node* argument) {\n    if (!node || !a"
          }
        ],
        [
          "config_load_env",
          {
            "file": "src/config/load/config_load_env/config_load_env.c",
            "line": 18,
            "return_type": "int",
            "is_static": false,
            "content_snippet": " on error\n  * /\n */\nint config_load_env(xmd_config* config) {\n    if (!config) re"
          }
        ],
        [
          "config_load_file",
          {
            "file": "src/config/load/config_load_file/config_load_file.c",
            "line": 21,
            "return_type": "int",
            "is_static": false,
            "content_snippet": " on error\n  * /\n */\nint config_load_file(xmd_config* config, const char* filename) {\n    if (!config || "
          }
        ],
        [
          "token_set_value",
          {
            "file": "src/token/operations/token_set_value/token_set_value.c",
            "line": 20,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint token_set_value(token* tok, const char* value) {\n    if (tok == NULL"
          }
        ],
        [
          "perf_profiler_stop",
          {
            "file": "src/performance/profiler/perf_profiler_stop/perf_profiler_stop.c",
            "line": 14,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint perf_profiler_stop(perf_profiler* profiler) {\n    if (!profiler |"
          }
        ],
        [
          "perf_profiler_start",
          {
            "file": "src/performance/profiler/perf_profiler_start/perf_profiler_start.c",
            "line": 14,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint perf_profiler_start(perf_profiler* profiler) {\n    if (!profiler) "
          }
        ],
        [
          "compare_times",
          {
            "file": "src/performance/metrics/compare_times/compare_times.c",
            "line": 10,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "mparison result\n */\nint compare_times(const void* a, const void* b) {\n    uint64_t time1 "
          }
        ],
        [
          "xmd_get_time",
          {
            "file": "src/platform/time/xmd_get_time.c",
            "line": 13,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint xmd_get_time(xmd_time_t* time) {\n    if (!time) retu"
          }
        ],
        [
          "xmd_create_directory",
          {
            "file": "src/platform/filesystem/xmd_create_directory/xmd_create_directory.c",
            "line": 13,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint xmd_create_directory(const char* path) {\n    // Check if dir"
          }
        ],
        [
          "xmd_file_exists",
          {
            "file": "src/platform/filesystem/xmd_file_exists/xmd_file_exists.c",
            "line": 13,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ot, -1 on error\n */\nint xmd_file_exists(const char* path) {\n    if (!path) retu"
          }
        ],
        [
          "xmd_is_directory",
          {
            "file": "src/platform/filesystem/xmd_is_directory/xmd_is_directory.c",
            "line": 13,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ot, -1 on error\n */\nint xmd_is_directory(const char* path) {\n    if (!path) retu"
          }
        ],
        [
          "xmd_mkdir",
          {
            "file": "src/platform/filesystem/xmd_mkdir/xmd_mkdir.c",
            "line": 13,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint xmd_mkdir(const char* path) {\n#ifdef XMD_PLATFORM"
          }
        ],
        [
          "xmd_process_kill",
          {
            "file": "src/platform/process/xmd_process_kill/xmd_process_kill.c",
            "line": 13,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint xmd_process_kill(xmd_process_t process) {\n#ifdef XMD_PLATFORM"
          }
        ],
        [
          "xmd_process_wait",
          {
            "file": "src/platform/process/xmd_process_wait/xmd_process_wait.c",
            "line": 17,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "r, 1 on timeout\n */\nint xmd_process_wait(xmd_process_t process, int* exit_code, uint32_t timeout_ms) {\n#ifdef XMD_PLATFORM"
          }
        ],
        [
          "xmd_process_create",
          {
            "file": "src/platform/process/xmd_process_create/xmd_process_create.c",
            "line": 16,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint xmd_process_create(const char* command, char* const argv[], xmd_process_t* process) {\n    if (!command ||"
          }
        ],
        [
          "xmd_mutex_destroy",
          {
            "file": "src/platform/threading/xmd_mutex_destroy/xmd_mutex_destroy.c",
            "line": 13,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint xmd_mutex_destroy(xmd_mutex_t* mutex) {\n    if (!mutex) ret"
          }
        ],
        [
          "xmd_mutex_init",
          {
            "file": "src/platform/threading/xmd_mutex_init/xmd_mutex_init.c",
            "line": 13,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint xmd_mutex_init(xmd_mutex_t* mutex) {\n    if (!mutex) ret"
          }
        ],
        [
          "xmd_mutex_lock",
          {
            "file": "src/platform/threading/xmd_mutex_lock/xmd_mutex_lock.c",
            "line": 13,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint xmd_mutex_lock(xmd_mutex_t* mutex) {\n    if (!mutex) ret"
          }
        ],
        [
          "xmd_mutex_unlock",
          {
            "file": "src/platform/threading/xmd_mutex_unlock/xmd_mutex_unlock.c",
            "line": 13,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint xmd_mutex_unlock(xmd_mutex_t* mutex) {\n    if (!mutex) ret"
          }
        ],
        [
          "xmd_get_fd_count",
          {
            "file": "src/platform/system/xmd_get_fd_count/xmd_get_fd_count.c",
            "line": 13,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ile descriptors\n */\nint xmd_get_fd_count(void) {\n#ifdef XMD_PLATFORM"
          }
        ],
        [
          "xmd_sleep_ms",
          {
            "file": "src/platform/system/xmd_sleep_ms/xmd_sleep_ms.c",
            "line": 13,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "rn 0 on success\n */\nint xmd_sleep_ms(uint32_t milliseconds) {\n#ifdef XMD_PLATFORM"
          }
        ],
        [
          "security_audit_init",
          {
            "file": "src/security/audit/security_audit_init/security_audit_init.c",
            "line": 20,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint security_audit_init(const char* log_file) {\n    if (audit_state"
          }
        ],
        [
          "security_audit_log",
          {
            "file": "src/security/audit/security_audit_log/security_audit_log.c",
            "line": 26,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint security_audit_log(audit_event_type type, const char* message,\n                      const char* source_file, const char* source_function,\n                      int source_line, security_result result) {\n    if (!audit_stat"
          }
        ],
        [
          "security_audit_get_entries",
          {
            "file": "src/security/audit/security_audit_get_entries/security_audit_get_entries.c",
            "line": 23,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint security_audit_get_entries(uint64_t start_time, uint64_t end_time,\n                               security_audit_entry** entries, size_t* count) {\n    if (!audit_stat"
          }
        ],
        [
          "security_sandbox_init",
          {
            "file": "src/security/sandbox/security_sandbox_init/security_sandbox_init.c",
            "line": 17,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint security_sandbox_init(void) {\n    // Implementati"
          }
        ],
        [
          "security_sandbox_execute",
          {
            "file": "src/security/sandbox/security_sandbox_execute/security_sandbox_execute.c",
            "line": 25,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint security_sandbox_execute(const char* command, char* result, size_t max_size) {\n    if (!command ||"
          }
        ],
        [
          "resource_limiter_set_time_limit",
          {
            "file": "src/resource/limiter/resource_limiter_set_time_limit/resource_limiter_set_time_limit.c",
            "line": 10,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint resource_limiter_set_time_limit(ResourceLimiter* limiter, long max_execution_time_ms) {\n    if (!limiter) r"
          }
        ],
        [
          "resource_limiter_set_cpu_limit",
          {
            "file": "src/resource/limiter/resource_limiter_set_cpu_limit/resource_limiter_set_cpu_limit.c",
            "line": 10,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint resource_limiter_set_cpu_limit(ResourceLimiter* limiter, long max_cpu_time_ms) {\n    if (!limiter) r"
          }
        ],
        [
          "resource_limiter_check_limits",
          {
            "file": "src/resource/limiter/resource_limiter_check_limits/resource_limiter_check_limits.c",
            "line": 14,
            "return_type": "int",
            "is_static": false,
            "content_snippet": " -1 if exceeded\n */\nint resource_limiter_check_limits(ResourceLimiter* limiter, ResourceUsage* usage) {\n    if (!limiter) r"
          }
        ],
        [
          "resource_limiter_set_memory_limit",
          {
            "file": "src/resource/limiter/resource_limiter_set_memory_limit/resource_limiter_set_memory_limit.c",
            "line": 10,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint resource_limiter_set_memory_limit(ResourceLimiter* limiter, long max_memory_mb) {\n    if (!limiter) {"
          }
        ],
        [
          "resource_monitor_reset",
          {
            "file": "src/resource/monitor/resource_monitor_reset/resource_monitor_reset.c",
            "line": 10,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "include/platform.h\"\nint resource_monitor_reset(ResourceMonitor* monitor) {\n    if (!monitor) r"
          }
        ],
        [
          "resource_monitor_stop",
          {
            "file": "src/resource/monitor/resource_monitor_stop/resource_monitor_stop.c",
            "line": 7,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "include/resource.h\"\nint resource_monitor_stop(ResourceMonitor* monitor) {\n    if (!monitor) r"
          }
        ],
        [
          "resource_monitor_start",
          {
            "file": "src/resource/monitor/resource_monitor_start/resource_monitor_start.c",
            "line": 8,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "include/platform.h\"\nint resource_monitor_start(ResourceMonitor* monitor) {\n    if (!monitor) {"
          }
        ],
        [
          "count_file_descriptors",
          {
            "file": "src/resource/utils/count_file_descriptors/count_file_descriptors.c",
            "line": 8,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "de <sys/resource.h>\nint count_file_descriptors(void) {\n    // Real file de"
          }
        ],
        [
          "resource_monitor_get_usage",
          {
            "file": "src/resource/monitor/resource_monitor_get_usage/resource_monitor_get_usage.c",
            "line": 16,
            "return_type": "int",
            "is_static": false,
            "content_snippet": "ss, -1 on error\n */\nint resource_monitor_get_usage(ResourceMonitor* monitor, ResourceUsage* usage) {\n    if (!monitor ||"
          }
        ],
        [
          "xmd_strcat_safe",
          {
            "file": "src/utils/string/xmd_strcat_safe/xmd_strcat_safe.c",
            "line": 20,
            "return_type": "int",
            "is_static": false,
            "content_snippet": ", -1 on failure\n */\nint xmd_strcat_safe(char* dest, const char* src, size_t dest_size) {\n    if (!dest || !s"
          }
        ],
        [
          "xmd_strcpy_safe",
          {
            "file": "src/utils/string/xmd_strcpy_safe/xmd_strcpy_safe.c",
            "line": 21,
            "return_type": "int",
            "is_static": false,
            "content_snippet": ", -1 on failure\n */\nint xmd_strcpy_safe(char* dest, const char* src, size_t dest_size) {\n    XMD_VALIDATE_PT"
          }
        ]
      ],
      "count": 53
    },
    {
      "pattern": "char*_args",
      "functions": [
        [
          "ast_process_xmd_content",
          {
            "file": "src/ast/ast_process_xmd_content.c",
            "line": 29,
            "return_type": "char*",
            "is_static": false,
            "content_snippet": "(must be freed)\n */\nchar* ast_process_xmd_content(const char* input, store* variables) {\n    if (!input) {\n "
          }
        ],
        [
          "xmd_dispatch_content",
          {
            "file": "src/misc/native_xmd_dispatch.c",
            "line": 91,
            "return_type": "char*",
            "is_static": false,
            "content_snippet": "ller must free)\n */\nchar* xmd_dispatch_content(const char* content) {\n    if (!content) {"
          }
        ],
        [
          "native_evaluate_program",
          {
            "file": "src/misc/native_xmd_dispatch.c",
            "line": 120,
            "return_type": "char*",
            "is_static": false,
            "content_snippet": "ller must free)\n */\nchar* native_evaluate_program(const char* input) {\n    if (!input) {\n "
          }
        ],
        [
          "ast_substitute_variables",
          {
            "file": "src/ast/substitution/ast_substitute_variables.c",
            "line": 23,
            "return_type": "char*",
            "is_static": false,
            "content_snippet": "t be freed) or NULL\nchar* ast_substitute_variables(const char* content, store* variables) {\n    if (!content) {"
          }
        ],
        [
          "ast_interpolate_string",
          {
            "file": "src/ast/evaluator/function/ast_evaluate_function_call/ast_evaluate_function_call.c",
            "line": 26,
            "return_type": "char*",
            "is_static": false,
            "content_snippet": "tring interpolation\nchar* ast_interpolate_string(const char* str, ast_evaluator* evaluator);\n\n/**\n * @brief Eval"
          }
        ],
        [
          "yaml_stringify_variable",
          {
            "file": "src/ast/yaml/yaml_functions.c",
            "line": 23,
            "return_type": "char*",
            "is_static": true,
            "content_snippet": "(must be freed)\n */\nstatic char* yaml_stringify_variable(variable* var, int indent) {\n    if (!var) {\n   "
          }
        ],
        [
          "json_escape_string",
          {
            "file": "src/ast/json/json_functions.c",
            "line": 23,
            "return_type": "char*",
            "is_static": true,
            "content_snippet": "(must be freed)\n */\nstatic char* json_escape_string(const char* str) {\n    if (!str) retur"
          }
        ],
        [
          "json_stringify_variable",
          {
            "file": "src/ast/json/json_functions.c",
            "line": 87,
            "return_type": "char*",
            "is_static": true,
            "content_snippet": "(must be freed)\n */\nstatic char* json_stringify_variable(variable* var, bool pretty, int indent) {\n    if (!var) {\n   "
          }
        ],
        [
          "extract_xmd_directives",
          {
            "file": "src/ast/preprocess/extract_xmd_directives.c",
            "line": 18,
            "return_type": "char*",
            "is_static": false,
            "content_snippet": "(must be freed)\n */\nchar* extract_xmd_directives(const char* input) {\n    if (!input) {\n "
          }
        ],
        [
          "ast_value_to_string",
          {
            "file": "src/ast/value/ast_value_to_string/ast_value_to_string.c",
            "line": 23,
            "return_type": "char*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nchar* ast_value_to_string(ast_value* value) {\n    if (!value) {\n "
          }
        ],
        [
          "ast_evaluate_program",
          {
            "file": "src/ast/evaluator/program/ast_evaluate_program/ast_evaluate_program.c",
            "line": 19,
            "return_type": "char*",
            "is_static": false,
            "content_snippet": "(must be freed)\n */\nchar* ast_evaluate_program(ast_node* program, ast_evaluator* evaluator) {\n    XMD_VALIDATE_PT"
          }
        ],
        [
          "token_to_string",
          {
            "file": "src/token/convert/token_to_string.c",
            "line": 23,
            "return_type": "char*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nchar* token_to_string(const token* tok) {\n    if (tok == NULL"
          }
        ],
        [
          "variable_to_string",
          {
            "file": "src/variable/operations/variable_to_string/variable_to_string.c",
            "line": 19,
            "return_type": "char*",
            "is_static": false,
            "content_snippet": "ariable_internal.h\"\nchar* variable_to_string(const variable* var) {\n    if (!var) {\n   "
          }
        ],
        [
          "perf_profiler_generate_report",
          {
            "file": "src/performance/profiler/perf_profiler_generate_report/perf_profiler_generate_report.c",
            "line": 14,
            "return_type": "char*",
            "is_static": false,
            "content_snippet": " implementation\n */\nchar* perf_profiler_generate_report(perf_profiler* profiler) {\n    if (!profiler) "
          }
        ],
        [
          "benchmark_generate_report",
          {
            "file": "src/performance/benchmark/benchmark_generate_report/benchmark_generate_report.c",
            "line": 17,
            "return_type": "char*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nchar* benchmark_generate_report(benchmark_suite* suite) {\n    if (!suite) {\n "
          }
        ],
        [
          "xmd_get_filename",
          {
            "file": "src/platform/path/xmd_get_filename.c",
            "line": 13,
            "return_type": "char*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nchar* xmd_get_filename(xmd_dirent_t* entry) {\n    if (!entry) ret"
          }
        ],
        [
          "security_sanitize_command_output",
          {
            "file": "src/security/sanitization/security_sanitize_command_output/security_sanitize_command_output.c",
            "line": 19,
            "return_type": "char*",
            "is_static": false,
            "content_snippet": "(must be freed)\n */\nchar* security_sanitize_command_output(const char* output) {\n    if (!output) {\n"
          }
        ],
        [
          "security_sanitize_html",
          {
            "file": "src/security/sanitization/security_sanitize_html/security_sanitize_html.c",
            "line": 25,
            "return_type": "char*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nchar* security_sanitize_html(const char* html) {\n    if (!html) {\n  "
          }
        ],
        [
          "security_sanitize_output",
          {
            "file": "src/security/sanitization/security_sanitize_output/security_sanitize_output.c",
            "line": 19,
            "return_type": "char*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nchar* security_sanitize_output(const char* input) {\n    if (!input) {\n "
          }
        ],
        [
          "xmd_get_variable",
          {
            "file": "src/bindings/c_api/variables/xmd_get_variable/xmd_get_variable.c",
            "line": 20,
            "return_type": "char*",
            "is_static": false,
            "content_snippet": "not found\n  * /\n */\nchar* xmd_get_variable(xmd_processor* processor, const char* key) {\n    if (!processor "
          }
        ],
        [
          "string_extract",
          {
            "file": "src/utils/string/string_extract/string_extract.c",
            "line": 20,
            "return_type": "char*",
            "is_static": false,
            "content_snippet": "NULL on failure\n */\nchar* string_extract(const char* source, size_t start, size_t length) {\n    if (!source) {\n"
          }
        ],
        [
          "xmd_strtrim",
          {
            "file": "src/utils/string/xmd_strtrim/xmd_strtrim.c",
            "line": 18,
            "return_type": "char*",
            "is_static": false,
            "content_snippet": " Trimmed string\n */\nchar* xmd_strtrim(char* str) {\n    XMD_NULL_CHECK("
          }
        ],
        [
          "xmd_strdup",
          {
            "file": "src/utils/string/xmd_strdup/xmd_strdup.c",
            "line": 18,
            "return_type": "char*",
            "is_static": false,
            "content_snippet": "NULL on failure\n */\nchar* xmd_strdup(const char* str) {\n    XMD_NULL_CHECK("
          }
        ]
      ],
      "count": 23
    },
    {
      "pattern": "bool_args",
      "functions": [
        [
          "xmd_is_native_syntax",
          {
            "file": "src/misc/native_xmd_dispatch.c",
            "line": 27,
            "return_type": "bool",
            "is_static": false,
            "content_snippet": "syntax detected\n */\nbool xmd_is_native_syntax(const char* content) {\n    if (!content) {"
          }
        ],
        [
          "parser_has_error",
          {
            "file": "src/parser/error/parser_has_error/parser_has_error.c",
            "line": 15,
            "return_type": "bool",
            "is_static": false,
            "content_snippet": "false otherwise\n */\nbool parser_has_error(parser_state* state) {\n    return state ? "
          }
        ],
        [
          "evaluate_condition",
          {
            "file": "src/conditional/evaluate_condition/evaluate_condition.c",
            "line": 22,
            "return_type": "bool",
            "is_static": false,
            "content_snippet": "otherwise\n  * /\n */\nbool evaluate_condition(const char* condition, store* variables) {\n    if (!condition)"
          }
        ],
        [
          "token_type_is_valid",
          {
            "file": "src/token/type/token_type_is_valid/token_type_is_valid.c",
            "line": 18,
            "return_type": "bool",
            "is_static": false,
            "content_snippet": "d, 0 if invalid\n */\nbool token_type_is_valid(token_type type) {\n    return type >= "
          }
        ],
        [
          "token_equals",
          {
            "file": "src/token/operations/token_equals/token_equals.c",
            "line": 21,
            "return_type": "bool",
            "is_static": false,
            "content_snippet": " 0 if not equal\n */\nbool token_equals(const token* tok1, const token* tok2) {\n    if (tok1 == tok"
          }
        ],
        [
          "variable_to_boolean",
          {
            "file": "src/variable/operations/variable_to_boolean/variable_to_boolean.c",
            "line": 20,
            "return_type": "bool",
            "is_static": false,
            "content_snippet": " representation\n */\nbool variable_to_boolean(const variable* var) {\n    if (!var) {\n   "
          }
        ],
        [
          "variable_extended",
          {
            "file": "src/variable/operations/variable_extended/variable_extended.c",
            "line": 24,
            "return_type": "bool",
            "is_static": false,
            "content_snippet": " in the future.\n */\nbool variable_extended(variable* var) {\n    if (!var) {\n   "
          }
        ],
        [
          "variable_equals",
          {
            "file": "src/variable/operations/variable_equals/variable_equals.c",
            "line": 21,
            "return_type": "bool",
            "is_static": false,
            "content_snippet": "false otherwise\n */\nbool variable_equals(const variable* a, const variable* b) {\n    if (a == b) {\n "
          }
        ],
        [
          "variable_get_boolean",
          {
            "file": "src/variable/operations/variable_get_boolean/variable_get_boolean.c",
            "line": 19,
            "return_type": "bool",
            "is_static": false,
            "content_snippet": " if not boolean\n */\nbool variable_get_boolean(const variable* var) {\n    if (!var || var"
          }
        ],
        [
          "variable_array_set",
          {
            "file": "src/variable/array/variable_array_set/variable_array_set.c",
            "line": 20,
            "return_type": "bool",
            "is_static": false,
            "content_snippet": "alse on failure\n */\nbool variable_array_set(variable* array_var, size_t index, variable* item) {\n    if (!array_var "
          }
        ],
        [
          "variable_array_add",
          {
            "file": "src/variable/array/variable_array_add/variable_array_add.c",
            "line": 20,
            "return_type": "bool",
            "is_static": false,
            "content_snippet": "alse on failure\n */\nbool variable_array_add(variable* array_var, variable* item) {\n    if (!array_var "
          }
        ],
        [
          "variable_object_set",
          {
            "file": "src/variable/object/variable_object_set/variable_object_set.c",
            "line": 20,
            "return_type": "bool",
            "is_static": false,
            "content_snippet": "alse on failure\n */\nbool variable_object_set(variable* object_var, const char* key, variable* value) {\n    if (!object_var"
          }
        ],
        [
          "variable_object_remove",
          {
            "file": "src/variable/object/variable_object_remove/variable_object_remove.c",
            "line": 21,
            "return_type": "bool",
            "is_static": false,
            "content_snippet": "t found/invalid\n */\nbool variable_object_remove(variable* object_var, const char* key) {\n    if (!object_var"
          }
        ],
        [
          "store_has",
          {
            "file": "src/store/operations/store_has/store_has.c",
            "line": 16,
            "return_type": "bool",
            "is_static": false,
            "content_snippet": "f store has key\n */\nbool store_has(store* s, const char* key) {\n    return store_ge"
          }
        ],
        [
          "store_set",
          {
            "file": "src/store/operations/store_set/store_set.c",
            "line": 26,
            "return_type": "bool",
            "is_static": false,
            "content_snippet": " false on error\n */\nbool store_set(store* s, const char* key, variable* value) {\n    XMD_VALIDATE_PT"
          }
        ],
        [
          "store_remove",
          {
            "file": "src/store/operations/store_remove/store_remove.c",
            "line": 24,
            "return_type": "bool",
            "is_static": false,
            "content_snippet": "se if not found\n */\nbool store_remove(store* s, const char* key) {\n    if (!s || !key)"
          }
        ],
        [
          "is_safe_html_tag",
          {
            "file": "src/security/utilities/process_html_tag/process_html_tag.c",
            "line": 16,
            "return_type": "bool",
            "is_static": false,
            "content_snippet": "orward declarations\nbool is_safe_html_tag(const char* tag);\nsize_t extract_tag_"
          }
        ],
        [
          "xmd_check_null",
          {
            "file": "src/utils/misc/xmd_check_null/xmd_check_null.c",
            "line": 19,
            "return_type": "bool",
            "is_static": false,
            "content_snippet": "false otherwise\n */\nbool xmd_check_null(const void* ptr, const char* error_msg) {\n    if (ptr == NULL"
          }
        ]
      ],
      "count": 18
    },
    {
      "pattern": "token*_args",
      "functions": [
        [
          "parser_advance_token",
          {
            "file": "src/parser/token/parser_advance_token/parser_advance_token.c",
            "line": 15,
            "return_type": "token*",
            "is_static": false,
            "content_snippet": "after advancing\n */\ntoken* parser_advance_token(parser_state* state) {\n    if (!state || !"
          }
        ],
        [
          "parser_peek_token",
          {
            "file": "src/parser/token/parser_peek_token/parser_peek_token.c",
            "line": 15,
            "return_type": "token*",
            "is_static": false,
            "content_snippet": " NULL if at end\n */\ntoken* parser_peek_token(parser_state* state) {\n    if (!state || !"
          }
        ],
        [
          "token_create",
          {
            "file": "src/token/create/token_create.c",
            "line": 25,
            "return_type": "token*",
            "is_static": false,
            "content_snippet": "NULL on failure\n */\ntoken* token_create(token_type type, const char* value, size_t line, size_t column) {\n    XMD_MALLOC_SAFE"
          }
        ],
        [
          "token_duplicate",
          {
            "file": "src/token/operations/token_duplicate/token_duplicate.c",
            "line": 19,
            "return_type": "token*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\ntoken* token_duplicate(const token* tok) {\n    if (tok == NULL"
          }
        ],
        [
          "token_copy",
          {
            "file": "src/token/operations/token_copy/token_copy.c",
            "line": 20,
            "return_type": "token*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\ntoken* token_copy(const token* t) {\n    if (t == NULL) "
          }
        ],
        [
          "token_list_reverse",
          {
            "file": "src/token/list/token_list_reverse/token_list_reverse.c",
            "line": 17,
            "return_type": "token*",
            "is_static": false,
            "content_snippet": "e reversed list\n */\ntoken* token_list_reverse(token* head) {\n    token* prev = N"
          }
        ],
        [
          "token_list_get",
          {
            "file": "src/token/list/token_list_get/token_list_get.c",
            "line": 19,
            "return_type": "token*",
            "is_static": false,
            "content_snippet": "LL if not found\n */\ntoken* token_list_get(token* list, size_t index) {\n    if (list == NUL"
          }
        ],
        [
          "token_list_append",
          {
            "file": "src/token/list/token_list_append/token_list_append.c",
            "line": 18,
            "return_type": "token*",
            "is_static": false,
            "content_snippet": "ead of the list\n */\ntoken* token_list_append(token* head, token* t) {\n    if (t == NULL) "
          }
        ]
      ],
      "count": 8
    },
    {
      "pattern": "DependencyNode*_args",
      "functions": [
        [
          "dependency_graph_find_node",
          {
            "file": "src/dependency/graph/dependency_graph_find_node/dependency_graph_find_node.c",
            "line": 19,
            "return_type": "DependencyNode*",
            "is_static": false,
            "content_snippet": "LL if not found\n */\nDependencyNode* dependency_graph_find_node(DependencyGraph* graph, const char* module_name) {\n    if (!graph || !"
          }
        ],
        [
          "dependency_node_new",
          {
            "file": "src/dependency/graph/dependency_node_new/dependency_node_new.c",
            "line": 18,
            "return_type": "DependencyNode*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nDependencyNode* dependency_node_new(Module* module) {\n    if (!module) {\n"
          }
        ]
      ],
      "count": 2
    },
    {
      "pattern": "variable*_args",
      "functions": [
        [
          "yaml_parse_simple",
          {
            "file": "src/ast/yaml/yaml_functions.c",
            "line": 156,
            "return_type": "variable*",
            "is_static": true,
            "content_snippet": "require libyaml\n */\nstatic variable* yaml_parse_simple(const char* yaml) {\n    if (!yaml) {\n  "
          }
        ],
        [
          "json_parse_value",
          {
            "file": "src/ast/json/json_functions.c",
            "line": 435,
            "return_type": "variable*",
            "is_static": true,
            "content_snippet": "\n    return arr;\n}\n\nstatic variable* json_parse_value(const char* json, size_t* pos) {\n    // Skip whitesp"
          }
        ],
        [
          "json_parse_object",
          {
            "file": "src/ast/json/json_functions.c",
            "line": 291,
            "return_type": "variable*",
            "is_static": true,
            "content_snippet": "son, size_t* pos);\n\nstatic variable* json_parse_object(const char* json, size_t* pos) {\n    variable* obj ="
          }
        ],
        [
          "json_parse_array",
          {
            "file": "src/ast/json/json_functions.c",
            "line": 386,
            "return_type": "variable*",
            "is_static": true,
            "content_snippet": "\n    return obj;\n}\n\nstatic variable* json_parse_array(const char* json, size_t* pos) {\n    variable* arr ="
          }
        ],
        [
          "ast_value_to_variable",
          {
            "file": "src/ast/value/ast_value_to_variable/ast_value_to_variable.c",
            "line": 22,
            "return_type": "variable*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nvariable* ast_value_to_variable(ast_value* value) {\n    if (!value) {\n "
          }
        ],
        [
          "parse_content",
          {
            "file": "src/parsers/unified/parse_content.c",
            "line": 30,
            "return_type": "variable*",
            "is_static": false,
            "content_snippet": "ed data or NULL\n */\nvariable* parse_content(const char* content, const char* force_type) {\n    if (!content) r"
          }
        ],
        [
          "parse_json",
          {
            "file": "src/parsers/json/parse_json/parse_json.c",
            "line": 19,
            "return_type": "variable*",
            "is_static": false,
            "content_snippet": "ON data or NULL\n */\nvariable* parse_json(const char* json) {\n    return parse_js"
          }
        ],
        [
          "parse_json_value",
          {
            "file": "src/parsers/json/parse_json_value/parse_json_value.c",
            "line": 20,
            "return_type": "variable*",
            "is_static": true,
            "content_snippet": "d value or NULL\n */\nstatic variable* parse_json_value(const char* json) {\n    if (!json) retu"
          }
        ],
        [
          "parse_yaml",
          {
            "file": "src/parsers/yaml/parse_yaml/parse_yaml.c",
            "line": 19,
            "return_type": "variable*",
            "is_static": false,
            "content_snippet": "ML data or NULL\n */\nvariable* parse_yaml(const char* yaml) {\n    return parse_ya"
          }
        ],
        [
          "parse_yaml_value",
          {
            "file": "src/parsers/yaml/parse_yaml_value/parse_yaml_value.c",
            "line": 21,
            "return_type": "variable*",
            "is_static": true,
            "content_snippet": "d value or NULL\n */\nstatic variable* parse_yaml_value(const char* yaml) {\n    if (!yaml) retu"
          }
        ],
        [
          "variable_create_core",
          {
            "file": "src/variable/create/variable_create_consolidated/variable_create_consolidated.c",
            "line": 22,
            "return_type": "variable*",
            "is_static": true,
            "content_snippet": "NULL on failure\n */\nstatic variable* variable_create_core(variable_type type) {\n    variable* var ="
          }
        ],
        [
          "variable_create_null",
          {
            "file": "src/variable/create/variable_create_null/variable_create_null.c",
            "line": 20,
            "return_type": "variable*",
            "is_static": false,
            "content_snippet": "NULL on failure\n */\nvariable* variable_create_null(void) {\n    variable* var ="
          }
        ],
        [
          "variable_create_boolean",
          {
            "file": "src/variable/create/variable_create_boolean/variable_create_boolean.c",
            "line": 19,
            "return_type": "variable*",
            "is_static": false,
            "content_snippet": "NULL on failure\n */\nvariable* variable_create_boolean(bool value) {\n    variable* var ="
          }
        ],
        [
          "variable_create_number",
          {
            "file": "src/variable/create/variable_create_number/variable_create_number.c",
            "line": 20,
            "return_type": "variable*",
            "is_static": false,
            "content_snippet": "NULL on failure\n */\nvariable* variable_create_number(double value) {\n    XMD_MALLOC_SAFE"
          }
        ],
        [
          "variable_create_string",
          {
            "file": "src/variable/create/variable_create_string/variable_create_string.c",
            "line": 21,
            "return_type": "variable*",
            "is_static": false,
            "content_snippet": "NULL on failure\n */\nvariable* variable_create_string(const char* value) {\n    XMD_MALLOC_SAFE"
          }
        ],
        [
          "variable_create_array",
          {
            "file": "src/variable/create/variable_create_array/variable_create_array.c",
            "line": 19,
            "return_type": "variable*",
            "is_static": false,
            "content_snippet": "NULL on failure\n */\nvariable* variable_create_array(void) {\n    variable* var ="
          }
        ],
        [
          "variable_create_object",
          {
            "file": "src/variable/create/variable_create_object/variable_create_object.c",
            "line": 19,
            "return_type": "variable*",
            "is_static": false,
            "content_snippet": "NULL on failure\n */\nvariable* variable_create_object(void) {\n    variable* var ="
          }
        ],
        [
          "variable_new_array",
          {
            "file": "src/variable/create/variable_new_array/variable_new_array.c",
            "line": 19,
            "return_type": "variable*",
            "is_static": false,
            "content_snippet": "NULL on failure\n */\nvariable* variable_new_array(variable** items, size_t count) {\n    variable* array"
          }
        ],
        [
          "variable_ref",
          {
            "file": "src/variable/memory/variable_ref/variable_ref.c",
            "line": 18,
            "return_type": "variable*",
            "is_static": false,
            "content_snippet": "er for chaining\n */\nvariable* variable_ref(variable* var) {\n    if (var == NULL"
          }
        ],
        [
          "variable_copy",
          {
            "file": "src/variable/operations/variable_copy/variable_copy.c",
            "line": 20,
            "return_type": "variable*",
            "is_static": false,
            "content_snippet": "NULL on failure\n */\nvariable* variable_copy(const variable* var) {\n    XMD_NULL_CHECK("
          }
        ],
        [
          "variable_convert",
          {
            "file": "src/variable/operations/variable_convert/variable_convert.c",
            "line": 22,
            "return_type": "variable*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nvariable* variable_convert(variable* var, variable_type target_type) {\n    if (!var) {\n   "
          }
        ],
        [
          "variable_array_get",
          {
            "file": "src/variable/array/variable_array_get/variable_array_get.c",
            "line": 19,
            "return_type": "variable*",
            "is_static": false,
            "content_snippet": "t found/invalid\n */\nvariable* variable_array_get(const variable* array_var, size_t index) {\n    if (!array_var "
          }
        ],
        [
          "variable_object_get",
          {
            "file": "src/variable/object/variable_object_get/variable_object_get.c",
            "line": 19,
            "return_type": "variable*",
            "is_static": false,
            "content_snippet": "t found/invalid\n */\nvariable* variable_object_get(const variable* object_var, const char* key) {\n    if (!object_var"
          }
        ],
        [
          "store_get",
          {
            "file": "src/store/operations/store_get/store_get.c",
            "line": 23,
            "return_type": "variable*",
            "is_static": false,
            "content_snippet": "LL if not found\n */\nvariable* store_get(store* s, const char* key) {\n    XMD_VALIDATE_PT"
          }
        ]
      ],
      "count": 24
    },
    {
      "pattern": "ast_value*_args",
      "functions": [
        [
          "ast_yaml_stringify",
          {
            "file": "src/ast/yaml/yaml_functions.c",
            "line": 301,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "ng as ast_value\n */\nast_value* ast_yaml_stringify(ast_node** args, size_t arg_count, ast_evaluator* evaluator) {\n    if (arg_count !"
          }
        ],
        [
          "ast_yaml_parse",
          {
            "file": "src/ast/yaml/yaml_functions.c",
            "line": 341,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "ct as ast_value\n */\nast_value* ast_yaml_parse(ast_node** args, size_t arg_count, ast_evaluator* evaluator) {\n    if (arg_count !"
          }
        ],
        [
          "ast_json_stringify",
          {
            "file": "src/ast/json/json_functions.c",
            "line": 534,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "ng as ast_value\n */\nast_value* ast_json_stringify(ast_node** args, size_t arg_count, ast_evaluator* evaluator) {\n    if (arg_count !"
          }
        ],
        [
          "ast_json_parse",
          {
            "file": "src/ast/json/json_functions.c",
            "line": 574,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "ct as ast_value\n */\nast_value* ast_json_parse(ast_node** args, size_t arg_count, ast_evaluator* evaluator) {\n    if (arg_count !"
          }
        ],
        [
          "ast_value_create_string",
          {
            "file": "src/ast/value/ast_value_create_string/ast_value_create_string.c",
            "line": 14,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "\n#include \"utils.h\"\nast_value* ast_value_create_string(const char* str) {\n    ast_value* val "
          }
        ],
        [
          "ast_value_create_number",
          {
            "file": "src/ast/value/ast_value_create_number/ast_value_create_number.c",
            "line": 14,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "\n#include \"utils.h\"\nast_value* ast_value_create_number(double value) {\n    ast_value* val "
          }
        ],
        [
          "ast_value_create_boolean",
          {
            "file": "src/ast/value/ast_value_create_boolean/ast_value_create_boolean.c",
            "line": 14,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "\n#include \"utils.h\"\nast_value* ast_value_create_boolean(bool value) {\n    ast_value* val "
          }
        ],
        [
          "ast_value_from_variable",
          {
            "file": "src/ast/value/ast_value_from_variable/ast_value_from_variable.c",
            "line": 18,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "ISSING FUNCTION\n */\nast_value* ast_value_from_variable(variable* var) {\n    if (!var) retur"
          }
        ],
        [
          "ast_value_create_array",
          {
            "file": "src/ast/value/ast_value_create_array/ast_value_create_array.c",
            "line": 14,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "\n#include \"utils.h\"\nast_value* ast_value_create_array(void) {\n    ast_value* val "
          }
        ],
        [
          "ast_evaluate_program_node",
          {
            "file": "src/ast/evaluator/program/ast_evaluate_program_node.c",
            "line": 26,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": " result or NULL\n */\nast_value* ast_evaluate_program_node(ast_node* node, ast_evaluator* evaluator) {\n    if (!node || no"
          }
        ],
        [
          "ast_evaluate_function_def",
          {
            "file": "src/ast/evaluator/function/ast_evaluate_function_def/ast_evaluate_function_def.c",
            "line": 26,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "ty string value\n */\nast_value* ast_evaluate_function_def(ast_node* node, ast_evaluator* evaluator) {\n    if (!node || no"
          }
        ],
        [
          "ast_evaluate_function_call",
          {
            "file": "src/ast/evaluator/function/ast_evaluate_function_call/ast_evaluate_function_call.c",
            "line": 34,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_value* ast_evaluate_function_call(ast_node* node, ast_evaluator* evaluator) {\n    XMD_VALIDATE_PT"
          }
        ],
        [
          "ast_evaluate_continue",
          {
            "file": "src/ast/evaluator/control/ast_evaluate_continue/ast_evaluate_continue.c",
            "line": 26,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": " return values)\n */\nast_value* ast_evaluate_continue(ast_node* node, ast_evaluator* evaluator) {\n    if (!node || !e"
          }
        ],
        [
          "ast_evaluate_conditional",
          {
            "file": "src/ast/evaluator/control/ast_evaluate_conditional/ast_evaluate_conditional.c",
            "line": 26,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_value* ast_evaluate_conditional(ast_node* node, ast_evaluator* evaluator) {\n    XMD_VALIDATE_PT"
          }
        ],
        [
          "ast_evaluate_break",
          {
            "file": "src/ast/evaluator/control/ast_evaluate_break/ast_evaluate_break.c",
            "line": 26,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": " return values)\n */\nast_value* ast_evaluate_break(ast_node* node, ast_evaluator* evaluator) {\n    if (!node || !e"
          }
        ],
        [
          "ast_evaluate_while_loop",
          {
            "file": "src/ast/evaluator/loop/ast_evaluate_while_loop/ast_evaluate_while_loop.c",
            "line": 26,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "ty string value\n */\nast_value* ast_evaluate_while_loop(ast_node* node, ast_evaluator* evaluator) {\n    printf(\"DEBUG: "
          }
        ],
        [
          "ast_evaluate_loop",
          {
            "file": "src/ast/evaluator/loop/ast_evaluate_loop/ast_evaluate_loop.c",
            "line": 24,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_value* ast_evaluate_loop(ast_node* node, ast_evaluator* evaluator) {\n    if (!node || no"
          }
        ],
        [
          "ast_evaluate_file_write",
          {
            "file": "src/ast/evaluator/fileio/ast_evaluate_file_write/ast_evaluate_file_write.c",
            "line": 25,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "icating success\n */\nast_value* ast_evaluate_file_write(ast_node* node, ast_evaluator* evaluator) {\n    if (!node || !e"
          }
        ],
        [
          "ast_evaluate_file_list",
          {
            "file": "src/ast/evaluator/fileio/ast_evaluate_file_list/ast_evaluate_file_list.c",
            "line": 25,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "le list or NULL\n */\nast_value* ast_evaluate_file_list(ast_node* node, ast_evaluator* evaluator) {\n    if (!node || !e"
          }
        ],
        [
          "ast_evaluate_file_exists",
          {
            "file": "src/ast/evaluator/fileio/ast_evaluate_file_exists/ast_evaluate_file_exists.c",
            "line": 23,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": " if file exists\n */\nast_value* ast_evaluate_file_exists(ast_node* node, ast_evaluator* evaluator) {\n    if (!node || !e"
          }
        ],
        [
          "ast_evaluate_file_read",
          {
            "file": "src/ast/evaluator/fileio/ast_evaluate_file_read/ast_evaluate_file_read.c",
            "line": 24,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_value* ast_evaluate_file_read(ast_node* node, ast_evaluator* evaluator) {\n    if (!node || !e"
          }
        ],
        [
          "ast_evaluate_file_delete",
          {
            "file": "src/ast/evaluator/fileio/ast_evaluate_file_delete/ast_evaluate_file_delete.c",
            "line": 23,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "icating success\n */\nast_value* ast_evaluate_file_delete(ast_node* node, ast_evaluator* evaluator) {\n    if (!node || !e"
          }
        ],
        [
          "ast_evaluate_identifier",
          {
            "file": "src/ast/evaluator/expression/ast_evaluate_identifier/ast_evaluate_identifier.c",
            "line": 26,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_value* ast_evaluate_identifier(ast_node* node, ast_evaluator* evaluator) {\n    XMD_VALIDATE_PT"
          }
        ],
        [
          "ast_evaluate_binary_op",
          {
            "file": "src/ast/evaluator/expression/ast_evaluate_binary_op/ast_evaluate_binary_op.c",
            "line": 27,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_value* ast_evaluate_binary_op(ast_node* node, ast_evaluator* evaluator) {\n    XMD_VALIDATE_PT"
          }
        ],
        [
          "ast_evaluate_block",
          {
            "file": "src/ast/evaluator/misc/ast_evaluate_block/ast_evaluate_block.c",
            "line": 23,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_value* ast_evaluate_block(ast_node* node, ast_evaluator* evaluator) {\n    XMD_VALIDATE_PT"
          }
        ],
        [
          "ast_evaluate",
          {
            "file": "src/ast/evaluator/misc/ast_evaluate/ast_evaluate.c",
            "line": 28,
            "return_type": "ast_value*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_value* ast_evaluate(ast_node* node, ast_evaluator* evaluator) {\n    if (!node || !e"
          }
        ]
      ],
      "count": 26
    },
    {
      "pattern": "ast_node*_args",
      "functions": [
        [
          "ast_parse_program",
          {
            "file": "src/ast/parser/program/ast_parse_program.c",
            "line": 20,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "am node or NULL\n */\nast_node* ast_parse_program(const char* input) {\n    if (!input) {\n "
          }
        ],
        [
          "ast_parse_statement",
          {
            "file": "src/ast/parser/statement/ast_parse_statement/ast_parse_statement.c",
            "line": 20,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "ST node or NULL\n */\nast_node* ast_parse_statement(const char** pos) {\n    if (!pos || !*p"
          }
        ],
        [
          "ast_parse_conditional",
          {
            "file": "src/ast/parser/conditional/ast_parse_conditional.c",
            "line": 20,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "ST node or NULL\n */\nast_node* ast_parse_conditional(const char** pos) {\n    const char* sta"
          }
        ],
        [
          "ast_parse_object_creation",
          {
            "file": "src/ast/parser/object/ast_parse_object_creation.c",
            "line": 24,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "object creation\n */\nast_node* ast_parse_object_creation(const char** pos, const char* obj_name) {\n    printf(\"DEBUG: "
          }
        ],
        [
          "ast_parse_print",
          {
            "file": "src/ast/parser/output/ast_parse_print.c",
            "line": 20,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "ST node or NULL\n */\nast_node* ast_parse_print(const char** pos) {\n    const char* sta"
          }
        ],
        [
          "ast_parse_function",
          {
            "file": "src/ast/parser/function/ast_parse_function/ast_parse_function.c",
            "line": 26,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "ST node or NULL\n */\nast_node* ast_parse_function(const char** pos) {\n    const char* sta"
          }
        ],
        [
          "ast_parse_potential_function_call",
          {
            "file": "src/ast/parser/function/ast_parse_potential_function_call/ast_parse_potential_function_call.c",
            "line": 25,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "a function call\n */\nast_node* ast_parse_potential_function_call(const char** pos) {\n    const char* sta"
          }
        ],
        [
          "ast_parse_method",
          {
            "file": "src/ast/parser/class/ast_parse_method/ast_parse_method.c",
            "line": 26,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "ST node or NULL\n */\nast_node* ast_parse_method(const char** pos) {\n    const char* sta"
          }
        ],
        [
          "ast_parse_class",
          {
            "file": "src/ast/parser/class/ast_parse_class/ast_parse_class.c",
            "line": 21,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "ds ParentClass]\n */\nast_node* ast_parse_class(const char** pos) {\n    const char* sta"
          }
        ],
        [
          "ast_parse_while",
          {
            "file": "src/ast/parser/loop/ast_parse_while/ast_parse_while.c",
            "line": 23,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "ST node or NULL\n */\nast_node* ast_parse_while(const char** pos) {\n    if (!pos || !*p"
          }
        ],
        [
          "ast_parse_loop",
          {
            "file": "src/ast/parser/loop/ast_parse_loop/ast_parse_loop.c",
            "line": 28,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "ST node or NULL\n */\nast_node* ast_parse_loop(const char** pos) {\n    const char* sta"
          }
        ],
        [
          "ast_parse_range_loop",
          {
            "file": "src/ast/parser/loop/ast_parse_range_loop/ast_parse_range_loop.c",
            "line": 24,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "ST node or NULL\n */\nast_node* ast_parse_range_loop(const char** pos) {\n    const char* sta"
          }
        ],
        [
          "ast_parse_math_expression",
          {
            "file": "src/ast/parser/expression/ast_parse_math_expression/ast_parse_math_expression.c",
            "line": 20,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "sion: 2 + 3 * 4\n */\nast_node* ast_parse_math_expression(const char* expr) {\n    if (!expr) retu"
          }
        ],
        [
          "ast_parse_primary",
          {
            "file": "src/ast/parser/expression/ast_parse_primary/ast_parse_primary.c",
            "line": 24,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "ST node or NULL\n */\nast_node* ast_parse_primary(parser_state* parser) {\n    if (!parser || "
          }
        ],
        [
          "ast_parse_expression",
          {
            "file": "src/ast/parser/expression/ast_parse_expression/ast_parse_expression.c",
            "line": 23,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "ST node or NULL\n */\nast_node* ast_parse_expression(const char** pos) {\n    const char* sta"
          }
        ],
        [
          "ast_parse_comparison_expression",
          {
            "file": "src/ast/parser/expression/ast_parse_comparison_expression/ast_parse_comparison_expression.c",
            "line": 23,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "ST node or NULL\n */\nast_node* ast_parse_comparison_expression(const char* expr) {\n    if (!expr) {\n  "
          }
        ],
        [
          "ast_parse_if_then",
          {
            "file": "src/ast/parser/control/ast_parse_if_then/ast_parse_if_then.c",
            "line": 23,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "ST node or NULL\n */\nast_node* ast_parse_if_then(const char** pos) {\n    if (!pos || !*p"
          }
        ],
        [
          "ast_parse_else",
          {
            "file": "src/ast/parser/control/ast_parse_else/ast_parse_else.c",
            "line": 17,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "ST node or NULL\n */\nast_node* ast_parse_else(const char** pos) {\n    if (!pos || !*p"
          }
        ],
        [
          "ast_parse_elif",
          {
            "file": "src/ast/parser/control/ast_parse_elif/ast_parse_elif.c",
            "line": 21,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "ST node or NULL\n */\nast_node* ast_parse_elif(const char** pos) {\n    if (!pos || !*p"
          }
        ],
        [
          "ast_parse_if_block",
          {
            "file": "src/ast/parser/control/ast_parse_if_block/ast_parse_if_block.c",
            "line": 18,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "e if block form\n */\nast_node* ast_parse_if_block(const char** pos) {\n    const char* sta"
          }
        ],
        [
          "ast_parse_number_literal",
          {
            "file": "src/ast/parser/literal/ast_parse_number_literal/ast_parse_number_literal.c",
            "line": 24,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "ST node or NULL\n */\nast_node* ast_parse_number_literal(const char** start, const char** pos) {\n    const char* num"
          }
        ],
        [
          "ast_parse_single_value",
          {
            "file": "src/ast/parser/literal/ast_parse_single_value/ast_parse_single_value.c",
            "line": 20,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "ST node or NULL\n */\nast_node* ast_parse_single_value(const char** pos) {\n    const char* sta"
          }
        ],
        [
          "ast_parse_string_literal",
          {
            "file": "src/ast/parser/literal/ast_parse_string_literal/ast_parse_string_literal.c",
            "line": 23,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": " node or NULL  \n */\nast_node* ast_parse_string_literal(const char** start, const char** pos) {\n    // Support both"
          }
        ],
        [
          "ast_parse_array_assignment",
          {
            "file": "src/ast/parser/literal/ast_parse_array_assignment/ast_parse_array_assignment.c",
            "line": 20,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": " array creation\n */\nast_node* ast_parse_array_assignment(const char** pos, const char* array_name) {\n    printf(\"DEBUG: "
          }
        ],
        [
          "ast_parse_assignment",
          {
            "file": "src/ast/parser/variable/ast_parse_assignment/ast_parse_assignment.c",
            "line": 19,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "ST node or NULL\n */\nast_node* ast_parse_assignment(const char** pos) {\n    if (!pos || !*p"
          }
        ],
        [
          "ast_create_array_access",
          {
            "file": "src/ast/node/create/ast_create_array_access.c",
            "line": 22,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_node* ast_create_array_access(ast_node* array_expr, ast_node* index_expr, source_location loc) {\n    if (!array_expr"
          }
        ],
        [
          "ast_create_string_literal",
          {
            "file": "src/ast/node/create/ast_create_literal/ast_create_literal.c",
            "line": 62,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "string literals\n */\nast_node* ast_create_string_literal(const char* value, source_location loc) {\n    literal_value v"
          }
        ],
        [
          "ast_create_boolean_literal",
          {
            "file": "src/ast/node/create/ast_create_literal/ast_create_literal.c",
            "line": 80,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "oolean literals\n */\nast_node* ast_create_boolean_literal(bool value, source_location loc) {\n    literal_value v"
          }
        ],
        [
          "ast_create_binary_op",
          {
            "file": "src/ast/node/create/ast_create_binary_op/ast_create_binary_op.c",
            "line": 21,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_node* ast_create_binary_op(binary_operator op, ast_node* left, ast_node* right, source_location loc) {\n    if (!left || !r"
          }
        ],
        [
          "ast_create_literal",
          {
            "file": "src/ast/node/create/ast_create_literal/ast_create_literal.c",
            "line": 23,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_node* ast_create_literal(literal_type type, literal_value value, source_location loc) {\n    ast_node* node "
          }
        ],
        [
          "ast_create_number_literal",
          {
            "file": "src/ast/node/create/ast_create_number_literal/ast_create_number_literal.c",
            "line": 20,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_node* ast_create_number_literal(double value, source_location loc) {\n    XMD_MALLOC_SAFE"
          }
        ],
        [
          "ast_create_program",
          {
            "file": "src/ast/node/create/ast_create_program/ast_create_program.c",
            "line": 17,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_node* ast_create_program(void) {\n    ast_node* node "
          }
        ],
        [
          "ast_create_unary_op",
          {
            "file": "src/ast/node/create/ast_create_unary_op/ast_create_unary_op.c",
            "line": 23,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_node* ast_create_unary_op(unary_operator op, ast_node* operand, source_location loc) {\n    if (!operand) {"
          }
        ],
        [
          "ast_create_break_statement",
          {
            "file": "src/ast/node/create/ast_create_break_statement/ast_create_break_statement.c",
            "line": 20,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "nt node or NULL\n */\nast_node* ast_create_break_statement(source_location loc) {\n    ast_node* node "
          }
        ],
        [
          "ast_create_block",
          {
            "file": "src/ast/node/create/ast_create_block/ast_create_block.c",
            "line": 20,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_node* ast_create_block(source_location loc) {\n    ast_node* node "
          }
        ],
        [
          "ast_create_function_def",
          {
            "file": "src/ast/node/create/ast_create_function_def/ast_create_function_def.c",
            "line": 22,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_node* ast_create_function_def(const char* name, bool is_async, source_location loc) {\n    if (!name) {\n  "
          }
        ],
        [
          "ast_create_loop",
          {
            "file": "src/ast/node/create/ast_create_loop/ast_create_loop.c",
            "line": 21,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_node* ast_create_loop(const char* variable, ast_node* iterable, source_location loc) {\n    if (!variable |"
          }
        ],
        [
          "ast_create_assignment",
          {
            "file": "src/ast/node/create/ast_create_assignment/ast_create_assignment.c",
            "line": 22,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_node* ast_create_assignment(const char* variable, binary_operator op, ast_node* value, source_location loc) {\n    if (!variable |"
          }
        ],
        [
          "ast_create_array_literal",
          {
            "file": "src/ast/node/create/ast_create_array_literal/ast_create_array_literal.c",
            "line": 20,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_node* ast_create_array_literal(source_location loc) {\n    ast_node* node "
          }
        ],
        [
          "ast_create_continue_statement",
          {
            "file": "src/ast/node/create/ast_create_continue_statement/ast_create_continue_statement.c",
            "line": 20,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "nt node or NULL\n */\nast_node* ast_create_continue_statement(source_location loc) {\n    ast_node* node "
          }
        ],
        [
          "ast_create_method_def",
          {
            "file": "src/ast/node/create/ast_create_method_def/ast_create_method_def.c",
            "line": 21,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_node* ast_create_method_def(const char* name, bool is_private, source_location loc) {\n    if (!name) {\n  "
          }
        ],
        [
          "ast_create_identifier",
          {
            "file": "src/ast/node/create/ast_create_identifier/ast_create_identifier.c",
            "line": 21,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_node* ast_create_identifier(const char* name, source_location loc) {\n    if (!name) {\n  "
          }
        ],
        [
          "ast_create_class_def",
          {
            "file": "src/ast/node/create/ast_create_class_def/ast_create_class_def.c",
            "line": 23,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_node* ast_create_class_def(const char* name, const char* parent_class, source_location loc) {\n    if (!name) {\n  "
          }
        ],
        [
          "ast_create_function_call",
          {
            "file": "src/ast/node/create/ast_create_function_call/ast_create_function_call.c",
            "line": 21,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_node* ast_create_function_call(const char* name, source_location loc) {\n    if (!name) {\n  "
          }
        ],
        [
          "ast_create_variable_ref",
          {
            "file": "src/ast/node/create/ast_create_variable_ref/ast_create_variable_ref.c",
            "line": 23,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_node* ast_create_variable_ref(const char* name, source_location loc) {\n    if (!name) {\n  "
          }
        ],
        [
          "ast_create_conditional",
          {
            "file": "src/ast/node/create/ast_create_conditional/ast_create_conditional.c",
            "line": 21,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_node* ast_create_conditional(ast_node* condition, source_location loc) {\n    ast_node* node "
          }
        ],
        [
          "ast_create_return",
          {
            "file": "src/ast/node/misc/ast_create_return/ast_create_return.c",
            "line": 22,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_node* ast_create_return(ast_node* value, source_location loc) {\n    ast_node* node "
          }
        ],
        [
          "ast_create_directive",
          {
            "file": "src/ast/node/misc/ast_create_directive/ast_create_directive.c",
            "line": 22,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nast_node* ast_create_directive(const char* command, source_location loc) {\n    if (!command) {"
          }
        ],
        [
          "ast_create_file_exists",
          {
            "file": "src/ast/node/fileio/ast_create_file_exists/ast_create_file_exists.c",
            "line": 21,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "ts node or NULL\n */\nast_node* ast_create_file_exists(const char* file_path, source_location loc) {\n    ast_node* node "
          }
        ],
        [
          "ast_create_file_list",
          {
            "file": "src/ast/node/fileio/ast_create_file_list/ast_create_file_list.c",
            "line": 21,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "st node or NULL\n */\nast_node* ast_create_file_list(const char* directory_path, source_location loc) {\n    ast_node* node "
          }
        ],
        [
          "ast_create_file_read",
          {
            "file": "src/ast/node/fileio/ast_create_file_read/ast_create_file_read.c",
            "line": 21,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "ad node or NULL\n */\nast_node* ast_create_file_read(const char* file_path, source_location loc) {\n    ast_node* node "
          }
        ],
        [
          "ast_create_file_write",
          {
            "file": "src/ast/node/fileio/ast_create_file_write/ast_create_file_write.c",
            "line": 22,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "te node or NULL\n */\nast_node* ast_create_file_write(const char* file_path, const char* content, source_location loc) {\n    ast_node* node "
          }
        ],
        [
          "ast_create_file_delete",
          {
            "file": "src/ast/node/fileio/ast_create_file_delete/ast_create_file_delete.c",
            "line": 21,
            "return_type": "ast_node*",
            "is_static": false,
            "content_snippet": "te node or NULL\n */\nast_node* ast_create_file_delete(const char* file_path, source_location loc) {\n    ast_node* node "
          }
        ]
      ],
      "count": 53
    },
    {
      "pattern": "xmd_config*_args",
      "functions": [
        [
          "config_create",
          {
            "file": "src/config/create/config_create/config_create.c",
            "line": 18,
            "return_type": "xmd_config*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nxmd_config* config_create(void) {\n    xmd_internal_co"
          }
        ],
        [
          "config_get_global",
          {
            "file": "src/config/validate/config_get_global/config_get_global.c",
            "line": 19,
            "return_type": "xmd_config*",
            "is_static": false,
            "content_snippet": "itialized\n  * /\n */\nxmd_config* config_get_global(void) {\n    return (xmd_con"
          }
        ],
        [
          "xmd_config_create_default",
          {
            "file": "src/bindings/c_api/configuration/xmd_config_create_default/xmd_config_create_default.c",
            "line": 20,
            "return_type": "xmd_config*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nxmd_config* xmd_config_create_default(void) { \n    return config_"
          }
        ]
      ],
      "count": 3
    },
    {
      "pattern": "size_t_args",
      "functions": [
        [
          "token_list_length",
          {
            "file": "src/token/list/token_list_length/token_list_length.c",
            "line": 18,
            "return_type": "size_t",
            "is_static": false,
            "content_snippet": " tokens in list\n */\nsize_t token_list_length(const token* head) {\n    size_t count = "
          }
        ],
        [
          "variable_array_length",
          {
            "file": "src/variable/array/variable_array_length/variable_array_length.c",
            "line": 19,
            "return_type": "size_t",
            "is_static": false,
            "content_snippet": " 0 if not array\n */\nsize_t variable_array_length(const variable* var) {\n    return variable"
          }
        ],
        [
          "variable_array_size",
          {
            "file": "src/variable/array/variable_array_size/variable_array_size.c",
            "line": 19,
            "return_type": "size_t",
            "is_static": false,
            "content_snippet": "t array/invalid\n */\nsize_t variable_array_size(const variable* array_var) {\n    if (!array_var "
          }
        ],
        [
          "variable_object_size",
          {
            "file": "src/variable/object/variable_object_size/variable_object_size.c",
            "line": 19,
            "return_type": "size_t",
            "is_static": false,
            "content_snippet": " object/invalid\n */\nsize_t variable_object_size(const variable* object_var) {\n    if (!object_var"
          }
        ],
        [
          "variable_object_find_key",
          {
            "file": "src/variable/object/variable_object_find_key/variable_object_find_key.c",
            "line": 21,
            "return_type": "size_t",
            "is_static": false,
            "content_snippet": "AX if not found\n */\nsize_t variable_object_find_key(const variable* object_var, const char* key) {\n    if (!object_var"
          }
        ],
        [
          "store_size",
          {
            "file": "src/store/operations/store_size/store_size.c",
            "line": 16,
            "return_type": "size_t",
            "is_static": false,
            "content_snippet": " Get store size\n */\nsize_t store_size(store* s) {\n    return s ? s->s"
          }
        ],
        [
          "extract_tag_name",
          {
            "file": "src/security/utilities/process_html_tag/process_html_tag.c",
            "line": 17,
            "return_type": "size_t",
            "is_static": false,
            "content_snippet": "g(const char* tag);\nsize_t extract_tag_name(const char* tag_start, char* tag_name, size_t max_len);\n/**\n * @brief Proce"
          }
        ],
        [
          "process_html_tag",
          {
            "file": "src/security/utilities/process_html_tag/process_html_tag.c",
            "line": 26,
            "return_type": "size_t",
            "is_static": false,
            "content_snippet": "output position\n */\nsize_t process_html_tag(const char* tag_content, char* output, \n                              size_t output_pos, size_t max_output_size) {\n    if (tag_content"
          }
        ],
        [
          "remove_ansi_codes",
          {
            "file": "src/security/utilities/remove_ansi_codes/remove_ansi_codes.c",
            "line": 19,
            "return_type": "size_t",
            "is_static": false,
            "content_snippet": " cleaned string\n */\nsize_t remove_ansi_codes(const char* input, char* output, size_t max_output_size) {\n    const char* src"
          }
        ],
        [
          "get_memory_usage",
          {
            "file": "src/resource/utils/get_memory_usage/get_memory_usage.c",
            "line": 9,
            "return_type": "size_t",
            "is_static": false,
            "content_snippet": "#include <stddef.h>\nsize_t get_memory_usage(void) {\n    // Real memory "
          }
        ],
        [
          "xmd_hash_key",
          {
            "file": "src/utils/hash/xmd_hash_key/xmd_hash_key.c",
            "line": 18,
            "return_type": "size_t",
            "is_static": false,
            "content_snippet": "turn Hash value\n */\nsize_t xmd_hash_key(const char* key, size_t capacity) {\n    if (!key || cap"
          }
        ],
        [
          "xmd_expand_array",
          {
            "file": "src/utils/misc/xmd_expand_array/xmd_expand_array.c",
            "line": 19,
            "return_type": "size_t",
            "is_static": false,
            "content_snippet": "or 0 on failure\n */\nsize_t xmd_expand_array(void** array, size_t current_capacity, size_t element_size) {\n    if (!array || e"
          }
        ]
      ],
      "count": 12
    },
    {
      "pattern": "double_args",
      "functions": [
        [
          "variable_to_number",
          {
            "file": "src/variable/operations/variable_to_number/variable_to_number.c",
            "line": 18,
            "return_type": "double",
            "is_static": false,
            "content_snippet": " representation\n */\ndouble variable_to_number(const variable* var) {\n    if (!var) {\n   "
          }
        ],
        [
          "variable_get_number",
          {
            "file": "src/variable/operations/variable_get_number/variable_get_number.c",
            "line": 18,
            "return_type": "double",
            "is_static": false,
            "content_snippet": "0 if not number\n */\ndouble variable_get_number(const variable* var) {\n    if (!var || var"
          }
        ]
      ],
      "count": 2
    },
    {
      "pattern": "char**_args",
      "functions": [
        [
          "variable_object_keys",
          {
            "file": "src/variable/object/variable_object_keys/variable_object_keys.c",
            "line": 21,
            "return_type": "char**",
            "is_static": false,
            "content_snippet": " freed) or NULL\n */\nchar** variable_object_keys(const variable* object_var, size_t* count) {\n    if (!object_var"
          }
        ],
        [
          "store_keys",
          {
            "file": "src/store/operations/store_keys/store_keys.c",
            "line": 21,
            "return_type": "char**",
            "is_static": false,
            "content_snippet": " freed) or NULL\n */\nchar** store_keys(store* s, size_t* count) {\n    if (!s || !coun"
          }
        ]
      ],
      "count": 2
    },
    {
      "pattern": "uint64_t_args",
      "functions": [
        [
          "get_time_ns",
          {
            "file": "src/performance/benchmark/benchmark_run/benchmark_run.c",
            "line": 11,
            "return_type": "uint64_t",
            "is_static": false,
            "content_snippet": "./include/utils.h\"\n\nuint64_t get_time_ns(void);\nvoid calculate_stat"
          }
        ],
        [
          "xmd_get_memory_size",
          {
            "file": "src/platform/memory/xmd_get_memory_size/xmd_get_memory_size.c",
            "line": 12,
            "return_type": "uint64_t",
            "is_static": false,
            "content_snippet": "y size in bytes\n */\nuint64_t xmd_get_memory_size(void) {\n#ifdef XMD_PLATFORM"
          }
        ],
        [
          "xmd_get_memory_usage",
          {
            "file": "src/platform/memory/xmd_get_memory_usage/xmd_get_memory_usage.c",
            "line": 12,
            "return_type": "uint64_t",
            "is_static": false,
            "content_snippet": " usage in bytes\n */\nuint64_t xmd_get_memory_usage(void) {\n#ifdef XMD_PLATFORM"
          }
        ],
        [
          "xmd_get_tick_count",
          {
            "file": "src/platform/system/xmd_get_tick_count/xmd_get_tick_count.c",
            "line": 12,
            "return_type": "uint64_t",
            "is_static": false,
            "content_snippet": "in milliseconds\n */\nuint64_t xmd_get_tick_count(void) {\n#ifdef XMD_PLATFORM"
          }
        ]
      ],
      "count": 4
    },
    {
      "pattern": "void*_args",
      "functions": [
        [
          "xmd_aligned_alloc",
          {
            "file": "src/platform/memory/xmd_aligned_alloc/xmd_aligned_alloc.c",
            "line": 14,
            "return_type": "void*",
            "is_static": false,
            "content_snippet": "r NULL on error\n */\nvoid* xmd_aligned_alloc(size_t alignment, size_t size) {\n#ifdef XMD_PLATFORM"
          }
        ],
        [
          "c_api_xmd_init",
          {
            "file": "src/bindings/c_api/initialization/c_api_xmd_init/c_api_xmd_init.c",
            "line": 22,
            "return_type": "void*",
            "is_static": false,
            "content_snippet": " on error\n  * /\n */\nvoid* c_api_xmd_init(const char* config_path) {\n    xmd_context_int"
          }
        ],
        [
          "xmd_calloc",
          {
            "file": "src/utils/memory/xmd_calloc/xmd_calloc.c",
            "line": 18,
            "return_type": "void*",
            "is_static": false,
            "content_snippet": "NULL on failure\n */\nvoid* xmd_calloc(size_t count, size_t size) {\n    if (count == 0 "
          }
        ],
        [
          "xmd_realloc",
          {
            "file": "src/utils/memory/xmd_realloc/xmd_realloc.c",
            "line": 18,
            "return_type": "void*",
            "is_static": false,
            "content_snippet": "NULL on failure\n */\nvoid* xmd_realloc(void* ptr, size_t size) {\n    if (size == 0) "
          }
        ],
        [
          "xmd_malloc",
          {
            "file": "src/utils/memory/xmd_malloc/xmd_malloc.c",
            "line": 19,
            "return_type": "void*",
            "is_static": false,
            "content_snippet": "NULL on failure\n */\nvoid* xmd_malloc(size_t size) {\n    XMD_CHECK_RANGE"
          }
        ]
      ],
      "count": 5
    },
    {
      "pattern": "long_args",
      "functions": [
        [
          "xmd_get_cpu_time",
          {
            "file": "src/platform/system/xmd_get_cpu_time/xmd_get_cpu_time.c",
            "line": 13,
            "return_type": "long",
            "is_static": false,
            "content_snippet": "in milliseconds\n */\nlong xmd_get_cpu_time(void) {\n#ifdef XMD_PLATFORM"
          }
        ],
        [
          "get_elapsed_time_ms",
          {
            "file": "src/resource/utils/get_elapsed_time_ms/get_elapsed_time_ms.c",
            "line": 8,
            "return_type": "long",
            "is_static": false,
            "content_snippet": "include/platform.h\"\nlong get_elapsed_time_ms(const xmd_time_t* start_time) {\n    xmd_time_t curr"
          }
        ]
      ],
      "count": 2
    },
    {
      "pattern": "xmd_error_code_args",
      "functions": [
        [
          "xmd_init",
          {
            "file": "src/bindings/c_api/initialization/xmd_init/xmd_init.c",
            "line": 16,
            "return_type": "xmd_error_code",
            "is_static": false,
            "content_snippet": "CESS on success\n */\nxmd_error_code xmd_init(void) { \n    return XMD_SUC"
          }
        ],
        [
          "xmd_set_variable",
          {
            "file": "src/bindings/c_api/variables/xmd_set_variable/xmd_set_variable.c",
            "line": 21,
            "return_type": "xmd_error_code",
            "is_static": false,
            "content_snippet": "n failure\n  * /\n */\nxmd_error_code xmd_set_variable(xmd_processor* processor, const char* key, const char* value) {\n    if (!processor "
          }
        ]
      ],
      "count": 2
    },
    {
      "pattern": "xmd_result*_args",
      "functions": [
        [
          "xmd_process_file",
          {
            "file": "src/bindings/c_api/processing/xmd_process_file/xmd_process_file.c",
            "line": 22,
            "return_type": "xmd_result*",
            "is_static": false,
            "content_snippet": " on error\n  * /\n */\nxmd_result* xmd_process_file(xmd_processor* processor, const char* filename) {\n    if (!processor "
          }
        ],
        [
          "xmd_process_string_api",
          {
            "file": "src/bindings/c_api/processing/xmd_process_string_api/xmd_process_string_api.c",
            "line": 26,
            "return_type": "xmd_result*",
            "is_static": false,
            "content_snippet": "md_result_free)\n */\nxmd_result* xmd_process_string_api(void* handle, const char* input, size_t input_length) {\n    if (!handle || "
          }
        ],
        [
          "xmd_process_string",
          {
            "file": "src/bindings/c_api/processing/xmd_process_string/xmd_process_string.c",
            "line": 25,
            "return_type": "xmd_result*",
            "is_static": false,
            "content_snippet": "md_result_free)\n */\nxmd_result* xmd_process_string(xmd_processor* processor, \n                               const char* input, \n                               size_t input_length) {\n    if (!processor "
          }
        ],
        [
          "c_api_create_result",
          {
            "file": "src/bindings/c_api/results/c_api_create_result/c_api_create_result.c",
            "line": 22,
            "return_type": "xmd_result*",
            "is_static": false,
            "content_snippet": " on error\n  * /\n */\nxmd_result* c_api_create_result(int error_code, const char* output, const char* error_message) {\n    xmd_result* res"
          }
        ]
      ],
      "count": 4
    }
  ],
  "recommendations": [
    {
      "action": "Fix missing function definitions",
      "count": 558,
      "priority": "medium",
      "description": "Add definitions for 558 called but undefined functions"
    }
  ]
}